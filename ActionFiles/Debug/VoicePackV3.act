{
  "Conditions": {
    "FilterSet": [
      {
        "EventName": "ApproachSettlement",
        "Actions": "GenericResponse",
        "Filters": [
          {
            "Item": "",
            "Content": "",
            "Matchtype": "AlwaysTrue"
          }
        ]
      },
      {
        "EventName": "Bounty",
        "Actions": "GenericResponse",
        "Filters": [
          {
            "Item": "",
            "Content": "",
            "Matchtype": "AlwaysTrue"
          }
        ]
      },
      {
        "EventName": "BuyAmmo",
        "Actions": "GenericResponse",
        "Filters": [
          {
            "Item": "",
            "Content": "",
            "Matchtype": "AlwaysTrue"
          }
        ]
      },
      {
        "EventName": "BuyDrones",
        "Actions": "GenericResponse",
        "Filters": [
          {
            "Item": "",
            "Content": "",
            "Matchtype": "AlwaysTrue"
          }
        ]
      },
      {
        "EventName": "BuyExplorationData",
        "Actions": "GenericResponse",
        "Filters": [
          {
            "Item": "",
            "Content": "",
            "Matchtype": "AlwaysTrue"
          }
        ]
      },
      {
        "EventName": "BuyTradeData",
        "Actions": "GenericResponse",
        "Filters": [
          {
            "Item": "",
            "Content": "",
            "Matchtype": "AlwaysTrue"
          }
        ]
      },
      {
        "EventName": "CapShipBond",
        "Actions": "GenericResponse",
        "Filters": [
          {
            "Item": "",
            "Content": "",
            "Matchtype": "AlwaysTrue"
          }
        ]
      },
      {
        "EventName": "CockpitBreached",
        "Actions": "GenericResponse",
        "ActionData": "Volume=100",
        "Filters": [
          {
            "Item": "",
            "Content": "",
            "Matchtype": "AlwaysTrue"
          }
        ]
      },
      {
        "EventName": "CollectCargo",
        "Actions": "GenericResponse",
        "Filters": [
          {
            "Item": "",
            "Content": "",
            "Matchtype": "AlwaysTrue"
          }
        ]
      },
      {
        "EventName": "CommitCrime",
        "Actions": "CommitCrime",
        "Filters": [
          {
            "Item": "",
            "Content": "",
            "Matchtype": "AlwaysTrue"
          }
        ]
      },
      {
        "EventName": "CommunityGoalDiscard",
        "Actions": "GenericResponse",
        "Filters": [
          {
            "Item": "",
            "Content": "",
            "Matchtype": "AlwaysTrue"
          }
        ]
      },
      {
        "EventName": "CommunityGoalJoin",
        "Actions": "GenericResponse",
        "Filters": [
          {
            "Item": "",
            "Content": "",
            "Matchtype": "AlwaysTrue"
          }
        ]
      },
      {
        "EventName": "CommunityGoalReward",
        "Actions": "GenericResponse",
        "Filters": [
          {
            "Item": "",
            "Content": "",
            "Matchtype": "AlwaysTrue"
          }
        ]
      },
      {
        "EventName": "CrewAssign",
        "Actions": "GenericResponse",
        "Filters": [
          {
            "Item": "",
            "Content": "",
            "Matchtype": "AlwaysTrue"
          }
        ]
      },
      {
        "EventName": "CrewFire",
        "Actions": "GenericResponse",
        "Filters": [
          {
            "Item": "",
            "Content": "",
            "Matchtype": "AlwaysTrue"
          }
        ]
      },
      {
        "EventName": "CrewHire",
        "Actions": "GenericResponse",
        "Filters": [
          {
            "Item": "",
            "Content": "",
            "Matchtype": "AlwaysTrue"
          }
        ]
      },
      {
        "EventName": "DatalinkScan",
        "Actions": "GenericResponse",
        "Filters": [
          {
            "Item": "",
            "Content": "",
            "Matchtype": "AlwaysTrue"
          }
        ]
      },
      {
        "EventName": "DatalinkVoucher",
        "Actions": "GenericResponse",
        "Filters": [
          {
            "Item": "",
            "Content": "",
            "Matchtype": "AlwaysTrue"
          }
        ]
      },
      {
        "EventName": "DataScanned",
        "Actions": "GenericResponse",
        "Filters": [
          {
            "Item": "",
            "Content": "",
            "Matchtype": "AlwaysTrue"
          }
        ]
      },
      {
        "EventName": "Died",
        "Actions": "GenericResponse",
        "Filters": [
          {
            "Item": "",
            "Content": "",
            "Matchtype": "AlwaysTrue"
          }
        ]
      },
      {
        "EventName": "Docked",
        "Actions": "GenericResponse",
        "Filters": [
          {
            "Item": "",
            "Content": "",
            "Matchtype": "AlwaysTrue"
          }
        ]
      },
      {
        "EventName": "DockFighter",
        "Actions": "GenericResponse",
        "Filters": [
          {
            "Item": "",
            "Content": "",
            "Matchtype": "AlwaysTrue"
          }
        ]
      },
      {
        "EventName": "DockingCancelled",
        "Actions": "GenericResponse",
        "Filters": [
          {
            "Item": "",
            "Content": "",
            "Matchtype": "AlwaysTrue"
          }
        ]
      },
      {
        "EventName": "DockingDenied",
        "Actions": "GenericDelayedResponse",
        "ActionData": "Delay=10000",
        "Filters": [
          {
            "Item": "",
            "Content": "",
            "Matchtype": "AlwaysTrue"
          }
        ]
      },
      {
        "EventName": "DockingGranted",
        "Actions": "GenericDelayedResponse",
        "ActionData": "Delay=10000",
        "Filters": [
          {
            "Item": "",
            "Content": "",
            "Matchtype": "AlwaysTrue"
          }
        ]
      },
      {
        "EventName": "DockingRequested",
        "Actions": "GenericResponse",
        "Filters": [
          {
            "Item": "",
            "Content": "",
            "Matchtype": "AlwaysTrue"
          }
        ]
      },
      {
        "EventName": "DockingTimeout",
        "Actions": "GenericResponse",
        "Filters": [
          {
            "Item": "",
            "Content": "",
            "Matchtype": "AlwaysTrue"
          }
        ]
      },
      {
        "EventName": "DockSRV",
        "Actions": "GenericResponse",
        "Filters": [
          {
            "Item": "",
            "Content": "",
            "Matchtype": "AlwaysTrue"
          }
        ]
      },
      {
        "EventName": "EjectCargo",
        "Actions": "GenericResponse",
        "Filters": [
          {
            "Item": "",
            "Content": "",
            "Matchtype": "AlwaysTrue"
          }
        ]
      },
      {
        "EventName": "EngineerApply",
        "Actions": "GenericResponse",
        "Filters": [
          {
            "Item": "",
            "Content": "",
            "Matchtype": "AlwaysTrue"
          }
        ]
      },
      {
        "EventName": "EngineerCraft",
        "Actions": "GenericResponse",
        "Filters": [
          {
            "Item": "",
            "Content": "",
            "Matchtype": "AlwaysTrue"
          }
        ]
      },
      {
        "EventName": "EngineerProgress",
        "Actions": "GenericResponse",
        "Filters": [
          {
            "Item": "",
            "Content": "",
            "Matchtype": "AlwaysTrue"
          }
        ]
      },
      {
        "EventName": "EscapeInterdiction",
        "Actions": "GenericResponse",
        "Filters": [
          {
            "Item": "",
            "Content": "",
            "Matchtype": "AlwaysTrue"
          }
        ]
      },
      {
        "EventName": "FactionKillBond",
        "Actions": "GenericResponse",
        "Filters": [
          {
            "Item": "",
            "Content": "",
            "Matchtype": "AlwaysTrue"
          }
        ]
      },
      {
        "EventName": "FSDJump",
        "Actions": "FSDResponse",
        "Filters": [
          {
            "Item": "",
            "Content": "",
            "Matchtype": "AlwaysTrue"
          }
        ]
      },
      {
        "EventName": "FetchRemoteModule",
        "Actions": "GenericResponse",
        "Filters": [
          {
            "Item": "",
            "Content": "",
            "Matchtype": "AlwaysTrue"
          }
        ]
      },
      {
        "EventName": "FuelScoop",
        "Actions": "GenericResponse",
        "ActionData": "Priority=Low",
        "Filters": [
          {
            "Item": "",
            "Content": "",
            "Matchtype": "AlwaysTrue"
          }
        ]
      },
      {
        "EventName": "HeatDamage",
        "Actions": "GenericResponse",
        "Filters": [
          {
            "Item": "",
            "Content": "",
            "Matchtype": "AlwaysTrue"
          }
        ]
      },
      {
        "EventName": "HeatWarning",
        "Actions": "GenericResponse",
        "Filters": [
          {
            "Item": "",
            "Content": "",
            "Matchtype": "AlwaysTrue"
          }
        ]
      },
      {
        "EventName": "HullDamage",
        "Actions": "HullDamage",
        "Filters": [
          {
            "Item": "",
            "Content": "",
            "Matchtype": "AlwaysTrue"
          }
        ]
      },
      {
        "EventName": "Interdicted",
        "Actions": "GenericResponse",
        "Filters": [
          {
            "Item": "",
            "Content": "",
            "Matchtype": "AlwaysTrue"
          }
        ]
      },
      {
        "EventName": "Interdiction",
        "Actions": "Interdiction",
        "Filters": [
          {
            "Item": "",
            "Content": "",
            "Matchtype": "AlwaysTrue"
          }
        ]
      },
      {
        "EventName": "JetConeBoost",
        "Actions": "GenericResponse",
        "Filters": [
          {
            "Item": "",
            "Content": "",
            "Matchtype": "AlwaysTrue"
          }
        ]
      },
      {
        "EventName": "JetConeDamage",
        "Actions": "GenericResponse",
        "Filters": [
          {
            "Item": "",
            "Content": "",
            "Matchtype": "AlwaysTrue"
          }
        ]
      },
      {
        "EventName": "LaunchFighter",
        "Actions": "GenericResponse",
        "Filters": [
          {
            "Item": "",
            "Content": "",
            "Matchtype": "AlwaysTrue"
          }
        ]
      },
      {
        "EventName": "LaunchSRV",
        "Actions": "GenericResponse",
        "Filters": [
          {
            "Item": "",
            "Content": "",
            "Matchtype": "AlwaysTrue"
          }
        ]
      },
      {
        "EventName": "Liftoff",
        "Actions": "GenericResponse",
        "Filters": [
          {
            "Item": "",
            "Content": "",
            "Matchtype": "AlwaysTrue"
          }
        ]
      },
      {
        "EventName": "MarketBuy",
        "Actions": "GenericResponse",
        "Filters": [
          {
            "Item": "",
            "Content": "",
            "Matchtype": "AlwaysTrue"
          }
        ]
      },
      {
        "EventName": "MarketSell",
        "Actions": "MarketSell",
        "Filters": [
          {
            "Item": "",
            "Content": "",
            "Matchtype": "AlwaysTrue"
          }
        ]
      },
      {
        "EventName": "MassModuleStore",
        "Actions": "GenericResponse",
        "Filters": [
          {
            "Item": "",
            "Content": "",
            "Matchtype": "AlwaysTrue"
          }
        ]
      },
      {
        "EventName": "MaterialCollected",
        "Actions": "GenericResponse",
        "Filters": [
          {
            "Item": "",
            "Content": "",
            "Matchtype": "AlwaysTrue"
          }
        ]
      },
      {
        "EventName": "MaterialDiscarded",
        "Actions": "GenericResponse",
        "Filters": [
          {
            "Item": "",
            "Content": "",
            "Matchtype": "AlwaysTrue"
          }
        ]
      },
      {
        "EventName": "MaterialDiscovered",
        "Actions": "GenericResponse",
        "Filters": [
          {
            "Item": "",
            "Content": "",
            "Matchtype": "AlwaysTrue"
          }
        ]
      },
      {
        "EventName": "MiningRefined",
        "Actions": "GenericResponse",
        "Filters": [
          {
            "Item": "",
            "Content": "",
            "Matchtype": "AlwaysTrue"
          }
        ]
      },
      {
        "EventName": "MissionAbandoned",
        "Actions": "GenericResponse",
        "Filters": [
          {
            "Item": "",
            "Content": "",
            "Matchtype": "AlwaysTrue"
          }
        ]
      },
      {
        "EventName": "MissionAccepted",
        "Actions": "GenericResponse",
        "Filters": [
          {
            "Item": "",
            "Content": "",
            "Matchtype": "AlwaysTrue"
          }
        ]
      },
      {
        "EventName": "MissionCompleted",
        "Actions": "GenericResponse",
        "Filters": [
          {
            "Item": "",
            "Content": "",
            "Matchtype": "AlwaysTrue"
          }
        ]
      },
      {
        "EventName": "MissionFailed",
        "Actions": "GenericResponse",
        "Filters": [
          {
            "Item": "",
            "Content": "",
            "Matchtype": "AlwaysTrue"
          }
        ]
      },
      {
        "EventName": "ModuleBuy",
        "Actions": "GenericResponse",
        "Filters": [
          {
            "Item": "",
            "Content": "",
            "Matchtype": "AlwaysTrue"
          }
        ]
      },
      {
        "EventName": "ModuleRetrieve",
        "Actions": "GenericResponse",
        "Filters": [
          {
            "Item": "",
            "Content": "",
            "Matchtype": "AlwaysTrue"
          }
        ]
      },
      {
        "EventName": "ModuleSell",
        "Actions": "GenericResponse",
        "Filters": [
          {
            "Item": "",
            "Content": "",
            "Matchtype": "AlwaysTrue"
          }
        ]
      },
      {
        "EventName": "ModuleSellRemote",
        "Actions": "GenericResponse",
        "Filters": [
          {
            "Item": "",
            "Content": "",
            "Matchtype": "AlwaysTrue"
          }
        ]
      },
      {
        "EventName": "ModuleStore",
        "Actions": "GenericResponse",
        "Filters": [
          {
            "Item": "",
            "Content": "",
            "Matchtype": "AlwaysTrue"
          }
        ]
      },
      {
        "EventName": "ModuleSwap",
        "Actions": "GenericResponse",
        "Filters": [
          {
            "Item": "",
            "Content": "",
            "Matchtype": "AlwaysTrue"
          }
        ]
      },
      {
        "EventName": "onRefreshEnd",
        "Actions": "onRefreshEnd",
        "Filters": [
          {
            "Item": "",
            "Content": "",
            "Matchtype": "AlwaysTrue"
          }
        ]
      },
      {
        "EventName": "onStartup",
        "Actions": "onStartup",
        "Filters": [
          {
            "Item": "",
            "Content": "",
            "Matchtype": "AlwaysTrue"
          }
        ]
      },
      {
        "EventName": "PayFines",
        "Actions": "GenericResponse",
        "Filters": [
          {
            "Item": "",
            "Content": "",
            "Matchtype": "AlwaysTrue"
          }
        ]
      },
      {
        "EventName": "PayLegacyFines",
        "Actions": "GenericResponse",
        "Filters": [
          {
            "Item": "",
            "Content": "",
            "Matchtype": "AlwaysTrue"
          }
        ]
      },
      {
        "EventName": "PowerplayCollect",
        "Actions": "GenericResponse",
        "Filters": [
          {
            "Item": "",
            "Content": "",
            "Matchtype": "AlwaysTrue"
          }
        ]
      },
      {
        "EventName": "PowerplayDefect",
        "Actions": "GenericResponse",
        "Filters": [
          {
            "Item": "",
            "Content": "",
            "Matchtype": "AlwaysTrue"
          }
        ]
      },
      {
        "EventName": "PowerplayDeliver",
        "Actions": "GenericResponse",
        "Filters": [
          {
            "Item": "",
            "Content": "",
            "Matchtype": "AlwaysTrue"
          }
        ]
      },
      {
        "EventName": "PowerplayFastTrack",
        "Actions": "GenericResponse",
        "Filters": [
          {
            "Item": "",
            "Content": "",
            "Matchtype": "AlwaysTrue"
          }
        ]
      },
      {
        "EventName": "PowerplayJoin",
        "Actions": "GenericResponse",
        "Filters": [
          {
            "Item": "",
            "Content": "",
            "Matchtype": "AlwaysTrue"
          }
        ]
      },
      {
        "EventName": "PowerplayLeave",
        "Actions": "GenericResponse",
        "Filters": [
          {
            "Item": "",
            "Content": "",
            "Matchtype": "AlwaysTrue"
          }
        ]
      },
      {
        "EventName": "PowerplaySalary",
        "Actions": "GenericResponse",
        "Filters": [
          {
            "Item": "",
            "Content": "",
            "Matchtype": "AlwaysTrue"
          }
        ]
      },
      {
        "EventName": "PowerplayVote",
        "Actions": "GenericResponse",
        "Filters": [
          {
            "Item": "",
            "Content": "",
            "Matchtype": "AlwaysTrue"
          }
        ]
      },
      {
        "EventName": "PowerplayVoucher",
        "Actions": "GenericResponse",
        "Filters": [
          {
            "Item": "",
            "Content": "",
            "Matchtype": "AlwaysTrue"
          }
        ]
      },
      {
        "EventName": "Promotion",
        "Actions": "GenericResponse",
        "Filters": [
          {
            "Item": "",
            "Content": "",
            "Matchtype": "AlwaysTrue"
          }
        ]
      },
      {
        "EventName": "PVPKill",
        "Actions": "GenericResponse",
        "Filters": [
          {
            "Item": "",
            "Content": "",
            "Matchtype": "AlwaysTrue"
          }
        ]
      },
      {
        "EventName": "RebootRepair",
        "Actions": "GenericResponse",
        "Filters": [
          {
            "Item": "",
            "Content": "",
            "Matchtype": "AlwaysTrue"
          }
        ]
      },
      {
        "EventName": "ReceiveText",
        "Actions": "GenericResponse",
        "Filters": [
          {
            "Item": "EventJS_Channel",
            "Content": "npc",
            "Matchtype": "DoesNotContain"
          }
        ]
      },
      {
        "EventName": "RedeemVoucher",
        "Actions": "GenericResponse",
        "Filters": [
          {
            "Item": "",
            "Content": "",
            "Matchtype": "AlwaysTrue"
          }
        ]
      },
      {
        "EventName": "RefuelAll",
        "Actions": "GenericResponse",
        "Filters": [
          {
            "Item": "",
            "Content": "",
            "Matchtype": "AlwaysTrue"
          }
        ]
      },
      {
        "EventName": "RefuelPartial",
        "Actions": "GenericResponse",
        "Filters": [
          {
            "Item": "",
            "Content": "",
            "Matchtype": "AlwaysTrue"
          }
        ]
      },
      {
        "EventName": "Repair",
        "Actions": "GenericResponse",
        "Filters": [
          {
            "Item": "",
            "Content": "",
            "Matchtype": "AlwaysTrue"
          }
        ]
      },
      {
        "EventName": "RepairAll",
        "Actions": "GenericResponse",
        "Filters": [
          {
            "Item": "",
            "Content": "",
            "Matchtype": "AlwaysTrue"
          }
        ]
      },
      {
        "EventName": "RestockVehicle",
        "Actions": "GenericResponse",
        "Filters": [
          {
            "Item": "",
            "Content": "",
            "Matchtype": "AlwaysTrue"
          }
        ]
      },
      {
        "EventName": "Resurrect",
        "Actions": "GenericResponse",
        "Filters": [
          {
            "Item": "",
            "Content": "",
            "Matchtype": "AlwaysTrue"
          }
        ]
      },
      {
        "EventName": "Scan",
        "Actions": "Scan",
        "Filters": [
          {
            "Item": "",
            "Content": "",
            "Matchtype": "AlwaysTrue"
          }
        ]
      },
      {
        "EventName": "ScientificResearch",
        "Actions": "GenericResponse",
        "Filters": [
          {
            "Item": "",
            "Content": "",
            "Matchtype": "AlwaysTrue"
          }
        ]
      },
      {
        "EventName": "Screenshot",
        "Actions": "GenericResponse",
        "Filters": [
          {
            "Item": "",
            "Content": "",
            "Matchtype": "AlwaysTrue"
          }
        ]
      },
      {
        "EventName": "SelfDestruct",
        "Actions": "GenericResponse",
        "Filters": [
          {
            "Item": "",
            "Content": "",
            "Matchtype": "AlwaysTrue"
          }
        ]
      },
      {
        "EventName": "SellDrones",
        "Actions": "GenericResponse",
        "Filters": [
          {
            "Item": "",
            "Content": "",
            "Matchtype": "AlwaysTrue"
          }
        ]
      },
      {
        "EventName": "SellExplorationData",
        "Actions": "SellExplorationData",
        "Filters": [
          {
            "Item": "",
            "Content": "",
            "Matchtype": "AlwaysTrue"
          }
        ]
      },
      {
        "EventName": "SendText",
        "Actions": "GenericResponse",
        "Filters": [
          {
            "Item": "",
            "Content": "",
            "Matchtype": "AlwaysTrue"
          }
        ]
      },
      {
        "EventName": "ShieldState",
        "Actions": "ShieldState",
        "Filters": [
          {
            "Item": "",
            "Content": "",
            "Matchtype": "AlwaysTrue"
          }
        ]
      },
      {
        "EventName": "ShipyardBuy",
        "Actions": "GenericResponse",
        "Filters": [
          {
            "Item": "",
            "Content": "",
            "Matchtype": "AlwaysTrue"
          }
        ]
      },
      {
        "EventName": "ShipyardNew",
        "Actions": "GenericResponse",
        "Filters": [
          {
            "Item": "",
            "Content": "",
            "Matchtype": "AlwaysTrue"
          }
        ]
      },
      {
        "EventName": "ShipyardSell",
        "Actions": "GenericResponse",
        "Filters": [
          {
            "Item": "",
            "Content": "",
            "Matchtype": "AlwaysTrue"
          }
        ]
      },
      {
        "EventName": "ShipyardSwap",
        "Actions": "GenericResponse",
        "Filters": [
          {
            "Item": "",
            "Content": "",
            "Matchtype": "AlwaysTrue"
          }
        ]
      },
      {
        "EventName": "ShipyardTransfer",
        "Actions": "GenericResponse",
        "Filters": [
          {
            "Item": "",
            "Content": "",
            "Matchtype": "AlwaysTrue"
          }
        ]
      },
      {
        "EventName": "SupercruiseEntry",
        "Actions": "GenericResponse",
        "Filters": [
          {
            "Item": "",
            "Content": "",
            "Matchtype": "AlwaysTrue"
          }
        ]
      },
      {
        "EventName": "SupercruiseExit",
        "Actions": "GenericResponse",
        "Filters": [
          {
            "Item": "",
            "Content": "",
            "Matchtype": "AlwaysTrue"
          }
        ]
      },
      {
        "EventName": "Synthesis",
        "Actions": "GenericResponse",
        "Filters": [
          {
            "Item": "",
            "Content": "",
            "Matchtype": "AlwaysTrue"
          }
        ]
      },
      {
        "EventName": "Touchdown",
        "Actions": "GenericResponse",
        "Filters": [
          {
            "Item": "",
            "Content": "",
            "Matchtype": "AlwaysTrue"
          }
        ]
      },
      {
        "EventName": "Undocked",
        "Actions": "GenericResponse",
        "Filters": [
          {
            "Item": "",
            "Content": "",
            "Matchtype": "AlwaysTrue"
          }
        ]
      },
      {
        "EventName": "USSDrop",
        "Actions": "GenericResponse",
        "Filters": [
          {
            "Item": "",
            "Content": "",
            "Matchtype": "AlwaysTrue"
          }
        ]
      },
      {
        "EventName": "VehicleSwitch",
        "Actions": "GenericResponse",
        "Filters": [
          {
            "Item": "",
            "Content": "",
            "Matchtype": "AlwaysTrue"
          }
        ]
      },
      {
        "EventName": "WingAdd",
        "Actions": "GenericResponse",
        "Filters": [
          {
            "Item": "",
            "Content": "",
            "Matchtype": "AlwaysTrue"
          }
        ]
      },
      {
        "EventName": "WingJoin",
        "Actions": "GenericResponse",
        "Filters": [
          {
            "Item": "",
            "Content": "",
            "Matchtype": "AlwaysTrue"
          }
        ]
      },
      {
        "EventName": "WingLeave",
        "Actions": "GenericResponse",
        "Filters": [
          {
            "Item": "",
            "Content": "",
            "Matchtype": "AlwaysTrue"
          }
        ]
      },
      {
        "EventName": "onShutdown",
        "Actions": "onShutdown",
        "Filters": [
          {
            "Item": "",
            "Content": "",
            "Matchtype": "AlwaysTrue"
          }
        ]
      },
      {
        "EventName": "onInstall",
        "Actions": "onInstall",
        "Filters": [
          {
            "Item": "",
            "Content": "",
            "Matchtype": "AlwaysTrue"
          }
        ]
      },
      {
        "EventName": "onSayFinished",
        "Actions": "SaySystemInfo",
        "Filters": [
          {
            "Item": "EventName",
            "Content": "FSD",
            "Matchtype": "Equals"
          }
        ]
      },
      {
        "EventName": "onTimer",
        "Actions": "SaySystemInfo",
        "Filters": [
          {
            "Item": "TimerName",
            "Content": "ScanDelay",
            "Matchtype": "Equals"
          }
        ]
      },
      {
        "EventName": "onMenuItem",
        "Actions": "Menus",
        "Filters": [
          {
            "Item": "MenuName",
            "Content": "VoiceMenu",
            "Matchtype": "Contains"
          }
        ]
      },
      {
        "EventName": "onTimer",
        "Actions": "GenericResponse",
        "Filters": [
          {
            "Item": "TimerName",
            "Content": "VoicePackGenericDelay",
            "Matchtype": "Contains"
          }
        ]
      },
      {
        "EventName": "Scanned",
        "Actions": "GenericResponse",
        "Filters": [
          {
            "Item": "",
            "Content": "",
            "Matchtype": "AlwaysTrue"
          }
        ]
      },
      {
        "EventName": "StartJump",
        "Actions": "GenericResponse",
        "Filters": [
          {
            "Item": "",
            "Content": "",
            "Matchtype": "AlwaysTrue"
          }
        ]
      },
      {
        "EventName": "SetUserShipName",
        "Actions": "GenericResponse",
        "Filters": [
          {
            "Item": "",
            "Content": "",
            "Matchtype": "AlwaysTrue"
          }
        ]
      },
      {
        "EventName": "CrewMemberJoins",
        "Actions": "GenericResponse",
        "Filters": [
          {
            "Item": "",
            "Content": "",
            "Matchtype": "AlwaysTrue"
          }
        ]
      },
      {
        "EventName": "CrewMemberQuits",
        "Actions": "GenericResponse",
        "Filters": [
          {
            "Item": "",
            "Content": "",
            "Matchtype": "AlwaysTrue"
          }
        ]
      },
      {
        "EventName": "JoinACrew",
        "Actions": "GenericResponse",
        "Filters": [
          {
            "Item": "",
            "Content": "",
            "Matchtype": "AlwaysTrue"
          }
        ]
      },
      {
        "EventName": "KickCrewMember",
        "Actions": "GenericResponse",
        "Filters": [
          {
            "Item": "",
            "Content": "",
            "Matchtype": "AlwaysTrue"
          }
        ]
      },
      {
        "EventName": "ChangeCrewRole",
        "Actions": "GenericResponse",
        "Filters": [
          {
            "Item": "",
            "Content": "",
            "Matchtype": "AlwaysTrue"
          }
        ]
      },
      {
        "EventName": "QuitACrew",
        "Actions": "GenericResponse",
        "Filters": [
          {
            "Item": "",
            "Content": "",
            "Matchtype": "AlwaysTrue"
          }
        ]
      }
    ]
  },
  "Programs": {
    "ProgramSet": [
      {
        "Name": "onStartup",
        "Steps": [
          {
            "StepName": "Call",
            "StepUC": "SetUpLanguage"
          },
          {
            "StepName": "If",
            "StepUC": "%version(1) < 6"
          },
          {
            "StepName": "Say",
            "StepUC": "\"Warning This voice pack requires version 6 of elite dangerous discovery at a minimum.\", Volume=100"
          },
          {
            "StepName": "Else",
            "StepUC": ""
          },
          {
            "StepName": "Set",
            "StepUC": "speech = %(say_welcome)"
          },
          {
            "StepName": "Call",
            "StepUC": "speak(speech=\"%(speech)\")"
          },
          {
            "StepName": "Print",
            "StepUC": "Voice Pack installed, running on EDD Version %version(1).%version(2).%version(3).%version(4)"
          },
          {
            "StepName": "Call",
            "StepUC": "Initialise"
          }
        ]
      },
      {
        "Name": "SetUpLanguage",
        "Steps": [
          {
            "StepName": "Rem",
            "StepUC": "do these.. If %(CurrentCulture) Contains sv"
          },
          {
            "StepName": "Call",
            "StepUC": "SetUpLanguageEnglish"
          }
        ]
      },
      {
        "Name": "onRefreshEnd",
        "Steps": [
          {
            "StepName": "If",
            "StepUC": "%(RefreshCount) <= 1"
          },
          {
            "StepName": "Event",
            "StepUC": "PREFIX LAST_ LAST"
          },
          {
            "StepName": "Ledger",
            "StepUC": "PREFIX LED_ AtOrBefore %(LAST_JID)"
          },
          {
            "StepName": "Event",
            "StepUC": "PREFIX RK_ LAST Rank"
          },
          {
            "StepName": "Set",
            "StepUC": "speech = \"%phrase(\\\"%expand(say_refresh)\\\")\""
          },
          {
            "StepName": "Call",
            "StepUC": "speak(speech=\"%(speech)\")",
            "StepWhitespace": 1
          }
        ]
      },
      {
        "Name": "GenericResponse",
        "Steps": [
          {
            "StepName": "Set",
            "StepUC": "v = say_%(EventJS_event)",
            "StepComment": "make up variable name from event name"
          },
          {
            "StepName": "Set",
            "StepUC": "prior = \"%existsdefault(Priority,\\\"Normal\\\")\"",
            "StepComment": "pick up config variables"
          },
          {
            "StepName": "Set",
            "StepUC": "speech = \"%phrase(\\\"%indirect(v)\\\")\"",
            "StepWhitespace": 1,
            "StepComment": "now expand any phrases in it"
          },
          {
            "StepName": "If",
            "StepUC": "HighVolume NotPresent"
          },
          {
            "StepName": "Set",
            "StepUC": "HighVolume = 0",
            "StepWhitespace": 1
          },
          {
            "StepName": "Call",
            "StepUC": "speak(speech=\"%(speech)\",HighVolume=\"%(HighVolume)\",Priority=\"%(prior)\")",
            "StepLevelUp": 1,
            "StepWhitespace": 1
          }
        ]
      },
      {
        "Name": "HullDamage",
        "Steps": [
          {
            "StepName": "Let",
            "StepUC": "health100 = %(EventClass_Health)*100,health = \"%floor(health100,N0)\""
          },
          {
            "StepName": "If",
            "StepUC": "health > 40"
          },
          {
            "StepName": "Set",
            "StepUC": "speech = \"%phrase(\\\"%expand(say_HullDamageCritical)\\\")\""
          },
          {
            "StepName": "Call",
            "StepUC": "speak(speech=\"%(speech)\", Volume=100)"
          },
          {
            "StepName": "Else",
            "StepUC": ""
          },
          {
            "StepName": "Set",
            "StepUC": "speech = \"%phrase(\\\"%expand(say_HullDamage)\\\")\""
          },
          {
            "StepName": "Call",
            "StepUC": "speak(speech=\"%(speech)\")",
            "StepWhitespace": 1
          }
        ]
      },
      {
        "Name": "ShieldState",
        "Steps": [
          {
            "StepName": "If",
            "StepUC": "EventClass_ShieldsUp IsTrue"
          },
          {
            "StepName": "Set",
            "StepUC": "speech = \"%phrase(\\\"%expand(say_shieldsup)\\\")\""
          },
          {
            "StepName": "Else",
            "StepUC": ""
          },
          {
            "StepName": "Set",
            "StepUC": "speech = \"%phrase(\\\"%expand(say_shieldsdown)\\\")\"",
            "StepWhitespace": 1
          },
          {
            "StepName": "Call",
            "StepUC": "speak(speech=\"%(speech)\")",
            "StepLevelUp": 1
          }
        ]
      },
      {
        "Name": "CommitCrime",
        "Steps": [
          {
            "StepName": "If",
            "StepUC": "EventClass_Bounty IsNotEmpty"
          },
          {
            "StepName": "Set",
            "StepUC": "speech = %expand(say_CommitCrimeBounty)"
          },
          {
            "StepName": "Else",
            "StepUC": ""
          },
          {
            "StepName": "Set",
            "StepUC": "speech = %expand(say_CommitCrimeFine)",
            "StepWhitespace": 1
          },
          {
            "StepName": "Set",
            "StepUC": "speech = \"%phrase(\\\"%(speech)\\\")\"",
            "StepLevelUp": 1
          },
          {
            "StepName": "Call",
            "StepUC": "speak(speech=\"%(speech)\")"
          }
        ]
      },
      {
        "Name": "FSDResponse",
        "Steps": [
          {
            "StepName": "Event",
            "StepUC": "FROM %(EventJID) INFO"
          },
          {
            "StepName": "Set",
            "StepUC": "visit = %expand(say_FSDJumpVisit)"
          },
          {
            "StepName": "Set",
            "StepUC": "visit = \"%wordof(visit, EC_VisitCount)\"",
            "StepWhitespace": 1
          },
          {
            "StepName": "Set",
            "StepUC": "speech = %expand(say_FSDJump)"
          },
          {
            "StepName": "If",
            "StepUC": "EventClass_FuelLevel <= 4"
          },
          {
            "StepName": "Set",
            "StepUC": "speech += \"%phrase(\\\"%expand(say_FSDJumpFuelWarning)\\\")\"",
            "StepWhitespace": 1
          },
          {
            "StepName": "If",
            "StepUC": "%(SpeechVerbosity) >= 2",
            "StepLevelUp": 1
          },
          {
            "StepName": "Set",
            "StepUC": "speech += \"%phrase(\\\"%expand(say_FSDJumpFuel)\\\")\""
          },
          {
            "StepName": "If",
            "StepUC": "%(SpeechVerbosity) >= 3 And EventClass_Faction IsNotEmpty",
            "StepLevelUp": 1
          },
          {
            "StepName": "Set",
            "StepUC": "speech += \"%phrase(\\\"%expand(say_FSDJumpFaction)\\\")\"",
            "StepWhitespace": 1
          },
          {
            "StepName": "If",
            "StepUC": "SpeechOptions IsPresent And SpeechOptions Contains FirstJumpOnly; And EC_VisitCount >= 2",
            "StepLevelUp": 1
          },
          {
            "StepName": "Call",
            "StepUC": "speak(speech=\"%(speech)\")"
          },
          {
            "StepName": "Else",
            "StepUC": ""
          },
          {
            "StepName": "Call",
            "StepUC": "speak(speech=\"%(speech)\",FinishEvent=FSD)"
          },
          {
            "StepName": "Global",
            "StepUC": "ScanSystem = %(EventStarSystem)"
          }
        ]
      },
      {
        "Name": "Scan",
        "Steps": [
          {
            "StepName": "Event",
            "StepUC": "FROM %(EventJID) INFO",
            "StepWhitespace": 1
          },
          {
            "StepName": "If",
            "StepUC": "%(EventClass_IsStar) IsTrue"
          },
          {
            "StepName": "Set",
            "StepUC": "speech = %expand(say_ScanStar)",
            "StepWhitespace": 1
          },
          {
            "StepName": "If",
            "StepUC": "%(SpeechVerbosity) >= 1"
          },
          {
            "StepName": "Set",
            "StepUC": "speech += %expand(say_ScanStarMassMag)",
            "StepWhitespace": 1
          },
          {
            "StepName": "If",
            "StepUC": "EventClass_nOrbitalPeriod IsNotEmpty And EventClass_nOrbitalPeriod > 0"
          },
          {
            "StepName": "Let",
            "StepUC": "period = %(EventClass_nOrbitalPeriod)/86400"
          },
          {
            "StepName": "Set",
            "StepUC": "speech += %expand(say_ScanStarInOrbit)",
            "StepWhitespace": 1
          },
          {
            "StepName": "If",
            "StepUC": "%(SpeechVerbosity) >= 2",
            "StepLevelUp": 1
          },
          {
            "StepName": "If",
            "StepUC": "EventClass_HabitableZoneInner IsNotEmpty And EventClass_HabitableZoneOuter IsNotEmpty And EventClass_HabitableZoneInner >= 5"
          },
          {
            "StepName": "Set",
            "StepUC": "speech += %expand(say_ScanStarHabitableZone)"
          },
          {
            "StepName": "If",
            "StepUC": "EventClass_nAge IsNotEmpty",
            "StepLevelUp": 1
          },
          {
            "StepName": "Set",
            "StepUC": "speech += %expand(say_ScanStarAge)",
            "StepWhitespace": 1
          },
          {
            "StepName": "Call",
            "StepUC": "speak(speech=\"%(speech)\")",
            "StepLevelUp": 3
          },
          {
            "StepName": "End",
            "StepUC": "",
            "StepWhitespace": 1
          },
          {
            "StepName": "Else",
            "StepUC": ""
          },
          {
            "StepName": "Let",
            "StepUC": "gravity = %(EventClass_nSurfaceGravity)/9.8"
          },
          {
            "StepName": "Let",
            "StepUC": "rotation = %(EventClass_nRotationPeriod)/86400"
          },
          {
            "StepName": "Let",
            "StepUC": "period = %(EventClass_nOrbitalPeriod)/86400",
            "StepWhitespace": 1
          },
          {
            "StepName": "Set",
            "StepUC": "speech = %expand(say_ScanPlanet)",
            "StepWhitespace": 1
          },
          {
            "StepName": "If",
            "StepUC": "%(SpeechVerbosity) >= 1"
          },
          {
            "StepName": "Set",
            "StepUC": "speech += %expand(say_ScanPlanetDistance)",
            "StepWhitespace": 1
          },
          {
            "StepName": "If",
            "StepUC": "%(EventClass_IsLandable) IsTrue"
          },
          {
            "StepName": "Set",
            "StepUC": "speech += %expand(say_ScanPlanetLandable)",
            "StepWhitespace": 1
          },
          {
            "StepName": "If",
            "StepUC": "%(EventClass_Atmosphere) IsNotEmpty And %(EventClass_Atmosphere) $!= None",
            "StepLevelUp": 1
          },
          {
            "StepName": "Set",
            "StepUC": "speech += %expand(say_ScanPlanetAtmosphere)"
          },
          {
            "StepName": "Else",
            "StepUC": ""
          },
          {
            "StepName": "Set",
            "StepUC": "speech += %expand(say_ScanPlanetNoAtmosphere)",
            "StepWhitespace": 1
          },
          {
            "StepName": "If",
            "StepUC": "%(SpeechVerbosity) >= 2",
            "StepLevelUp": 1
          },
          {
            "StepName": "If",
            "StepUC": "%(EventClass_Volcanism) IsNotEmpty"
          },
          {
            "StepName": "Set",
            "StepUC": "speech += %expand(say_ScanPlanetVolcanism)",
            "StepWhitespace": 1
          },
          {
            "StepName": "If",
            "StepUC": "%(EventClass_nTidalLock) $== 1",
            "StepLevelUp": 1
          },
          {
            "StepName": "Set",
            "StepUC": "speech += %expand(say_ScanPlanetTidallyLocked)"
          },
          {
            "StepName": "Else",
            "StepUC": ""
          },
          {
            "StepName": "Set",
            "StepUC": "speech += %expand(say_ScanPlanetRotation)",
            "StepWhitespace": 1
          },
          {
            "StepName": "Set",
            "StepUC": "speech += %expand(say_ScanPlanetOrbitalPeriod)",
            "StepLevelUp": 1,
            "StepWhitespace": 1
          },
          {
            "StepName": "If",
            "StepUC": "%(EventClass_nMassEM) < 0.01"
          },
          {
            "StepName": "Let",
            "StepUC": "moonmass = %(EventClass_nMassEM)/0.0123"
          },
          {
            "StepName": "Set",
            "StepUC": "speech += %expand(say_ScanPlanetMoonMass)"
          },
          {
            "StepName": "Else",
            "StepUC": ""
          },
          {
            "StepName": "Set",
            "StepUC": "speech += %expand(say_ScanPlanetMass)",
            "StepWhitespace": 1
          },
          {
            "StepName": "Set",
            "StepUC": "speech += %expand(say_ScanPlanetGravity)",
            "StepLevelUp": 1,
            "StepWhitespace": 1
          },
          {
            "StepName": "Set",
            "StepUC": "speech += %expand(say_ScanPlanetTemperature)",
            "StepWhitespace": 1
          },
          {
            "StepName": "If",
            "StepUC": "%(EventClass_nSurfacePressure) IsNotEmpty And %(EventClass_nSurfacePressure) > 0"
          },
          {
            "StepName": "Let",
            "StepUC": "atpressure = %(EventClass_nSurfacePressure)/101.325"
          },
          {
            "StepName": "Set",
            "StepUC": "speech += %expand(say_ScanPlanetPressure)"
          },
          {
            "StepName": "Else",
            "StepUC": ""
          },
          {
            "StepName": "Set",
            "StepUC": "speech += %expand(say_ScanPlanetNoSurfacePressure)",
            "StepWhitespace": 1
          },
          {
            "StepName": "If",
            "StepUC": "%(SpeechVerbosity) >= 3",
            "StepLevelUp": 1
          },
          {
            "StepName": "If",
            "StepUC": "%(EventClass_MaterialsCount) > 0"
          },
          {
            "StepName": "Set",
            "StepUC": "speech += %expand(say_ScanPlanetMaterials)",
            "StepWhitespace": 1
          },
          {
            "StepName": "Call",
            "StepUC": "speak(speech=\"%(speech)\")",
            "StepLevelUp": 4
          }
        ]
      },
      {
        "Name": "SellExplorationData",
        "Steps": [
          {
            "StepName": "Set",
            "StepUC": "speech = \"%phrase(\\\"%expand(say_SellExplorationData)\\\")\"",
            "StepWhitespace": 1
          },
          {
            "StepName": "If",
            "StepUC": "EventClass_Discovered_Length >= 1"
          },
          {
            "StepName": "Set",
            "StepUC": "speech += \" %phrase(\\\"%expand(say_SellExplorationDataBonus)\\\")\"",
            "StepWhitespace": 1
          },
          {
            "StepName": "Call",
            "StepUC": "speak(speech=\"%(speech)\")",
            "StepLevelUp": 1
          }
        ]
      },
      {
        "Name": "Interdiction",
        "Steps": [
          {
            "StepName": "If",
            "StepUC": "EventClass_Success IsTrue"
          },
          {
            "StepName": "Set",
            "StepUC": "speech = \"%phrase(\\\"%expand(say_InterdictionSuccess)\\\")\""
          },
          {
            "StepName": "Else",
            "StepUC": ""
          },
          {
            "StepName": "Set",
            "StepUC": "speech = \"%phrase(\\\"%expand(say_InterdictionFailure)\\\")\"",
            "StepWhitespace": 1
          },
          {
            "StepName": "Call",
            "StepUC": "speak(speech=\"%(speech)\")",
            "StepLevelUp": 1
          }
        ]
      },
      {
        "Name": "MarketSell",
        "Steps": [
          {
            "StepName": "Let",
            "StepUC": "profit = (%(EventClass_SellPrice)-%(EventClass_AvgPricePaid))*%(EventClass_Count)"
          },
          {
            "StepName": "Set",
            "StepUC": "speech = \"%phrase(\\\"%expand(say_MarketSell)\\\")\""
          },
          {
            "StepName": "Call",
            "StepUC": "speak(speech=\"%(speech)\")"
          }
        ]
      },
      {
        "Name": "onShutdown",
        "Steps": [
          {
            "StepName": "Set",
            "StepUC": "speech = \"%phrase(\\\"%expand(say_shutdown)\\\")\""
          },
          {
            "StepName": "Call",
            "StepUC": "speak(speech=\"%(speech)\",Wait=1)",
            "StepWhitespace": 1
          }
        ]
      },
      {
        "Name": "SetUpLanguageEnglish",
        "Steps": [
          {
            "StepName": "Global",
            "StepUC": "say_welcome $= \"This is Elite Dangerous Discovery, Voice Pack 3\""
          },
          {
            "StepName": "Global",
            "StepUC": "say_install $= \"You have installed Elite Dangerous Discovery, Voice Pack 3, English version\""
          },
          {
            "StepName": "Global",
            "StepUC": "say_shutdown $= \"Bye Bye Commander, till next time;Elite Dangerous Discovery closing;Fly safe commander; Salutations Commander\""
          },
          {
            "StepName": "Global",
            "StepUC": "say_refresh $= \"Welcome %existsdefault(RK_Class_Combat,\\\"\\\") Commander %(Commander), %ifcontains(LAST_ShipType,\\\"SRV\\\",\\\"driving\\\",\\\"flying\\\") a %(LAST_ShipType) with %(LED_Credits) credits\"",
            "StepWhitespace": 1
          },
          {
            "StepName": "Global",
            "StepUC": "say_ApproachSettlement $= \"Approaching %(EventClass_Name);Settlement %(EventClass_Name) approaching\"",
            "StepWhitespace": 1
          },
          {
            "StepName": "Global",
            "StepUC": "say_Bounty $= \"Bounty for that ship is %(EventClass_TotalReward) credits, faction was %rs(EventClass_VictimFaction,say_ss)\""
          },
          {
            "StepName": "Global",
            "StepUC": "say_BuyAmmo $= \"Ammunition bought, %(EventClass_Cost) credits;That cost %(EventClass_Cost) credits\""
          },
          {
            "StepName": "Global",
            "StepUC": "say_BuyExplorationData $= \"Bought map of star system %rs(EventClass_System,say_ss) for %(EventClass_Cost) credits\""
          },
          {
            "StepName": "Global",
            "StepUC": "say_BuyDrones $= \"Bought %(EventClass_Count) %(EventClass_Type) at a total cost of %(EventClass_TotalCost) credits\""
          },
          {
            "StepName": "Global",
            "StepUC": "say_BuyTradeData $= \"Bought trade data for system %rs(EventClass_System,say_ss), cost %(EventClass_Cost) credits\"",
            "StepWhitespace": 1
          },
          {
            "StepName": "Global",
            "StepUC": "say_CapShipBond $= \"Reward for capital ship combat from faction %rs(EventClass_AwardingFaction,say_ss) against %rs(EventClass_VictimFaction,say_ss), %(EventClass_Reward) credits\""
          },
          {
            "StepName": "Global",
            "StepUC": "say_CockpitBreached $= \"Alert, Alert, Cockpit breached. Head for station now;Emergency, loss of Cockpit Canopy, abort;Emergency, Cockpit Canopy is breached\""
          },
          {
            "StepName": "Global",
            "StepUC": "say_CollectCargo $= \"{Picked up;Collected;Scooped up} %(EventClass_FriendlyType) %iftrue(EventClass_Stolen,\\\", Warning commander, this cargo is stolen\\\")\""
          },
          {
            "StepName": "Global",
            "StepUC": "say_CommitCrimeFine $= \"Fine committed commander, %sc(EventClass_CrimeType) on %rs(EventClass_Faction,say_ss), cost %(EventClass_Fine) credits\""
          },
          {
            "StepName": "Global",
            "StepUC": "say_CommitCrimeBounty $= \"Crime committed commander, %sc(EventClass_CrimeType) on %rs(EventClass_Faction,say_ss), bounty on you is %(EventClass_Bounty) credits\""
          },
          {
            "StepName": "Global",
            "StepUC": "say_CommunityGoalJoin $= \"Joining the community goal %sc(EventClass_Name), located at system %rs(EventClass_System,say_ss)\""
          },
          {
            "StepName": "Global",
            "StepUC": "say_CommunityGoalReward $= \"Community goal %sc(EventClass_Name), located at system %rs(EventClass_System,say_ss), rewarded you with %(EventClass_Reward) credits\""
          },
          {
            "StepName": "Global",
            "StepUC": "say_CommunityGoalDiscard $= \"Opting out of community goal %sc(EventClass_Name), located at system %rs(EventClass_System,say_ss)\""
          },
          {
            "StepName": "Global",
            "StepUC": "say_CrewAssign $= \"Crew member %(EventClass_Name), %ifequal(EventClass_Role,\\\"Active\\\",\\\" reporting for duty\\\",\\\" placed on %(EventClass_Role)\\\")\""
          },
          {
            "StepName": "Global",
            "StepUC": "say_CrewFire $= \"{Crew member %(EventClass_Name) }fired;dismissed;is paid off, goodbye sucker\""
          },
          {
            "StepName": "Global",
            "StepUC": "say_CrewHire $= \"{Hired new crew member %(EventClass_Name)%ifnotempty(EventClass_Faction,\\\", of faction %rs(EventClass_Faction,say_ss)\\\"), rank %(EventClass_CombatRank), costing %(EventClass_Cost) credits.} Welcome to the team; Welcome onboard\"",
            "StepWhitespace": 1
          },
          {
            "StepName": "Global",
            "StepUC": "say_ChangeCrewRole $= \"Crew role changed to %(EventClass_Role);Swapped control to %(EventClass_Role)\""
          },
          {
            "StepName": "Global",
            "StepUC": "say_CrewMemberJoins $= \"Crew member %(EventClass_Crew) joins us on the %(EventShip_ShortName), Welcome Commander;Welcome Commander %(EventClass_Crew) to our ship\""
          },
          {
            "StepName": "Global",
            "StepUC": "say_CrewMemberQuits $= \"Crew member %(EventClass_Crew) quits;Commander %(EventClass_Crew) left\""
          },
          {
            "StepName": "Global",
            "StepUC": "say_JoinACrew $= \"Joining commander %(EventClass_Captain) as crew member;Signing on for service with %(EventClass_Captain)\""
          },
          {
            "StepName": "Global",
            "StepUC": "say_QuitACrew $= \"Leaving commander %(EventClass_Captain) ship;Resigning my commission, commander %(EventClass_Captain)\""
          },
          {
            "StepName": "Global",
            "StepUC": "say_KickCrewMember $= \"Kicking %(EventClass_Crew);Removed crew %(EventClass_Crew);%(EventClass_Crew) is removed from the ship\"",
            "StepWhitespace": 1
          },
          {
            "StepName": "Global",
            "StepUC": "say_DatalinkVoucher $= \"{Scanned datalink;Downloaded datalink}{, voucher received is worth;, that's worth} %(EventClass_Reward) credits from %rs(EventClass_PayeeFaction,say_ss)\""
          },
          {
            "StepName": "Global",
            "StepUC": "say_DatalinkScan $= \"Scanned data link, %(EventClass_Type)\""
          },
          {
            "StepName": "Global",
            "StepUC": "say_DataScanned $= \"Scanned %sc(EventClass_Type)\""
          },
          {
            "StepName": "Global",
            "StepUC": "say_Died $= \"Here lies the bones of commander %(Commander), dead and buried; Your dead and buried commander %(Commander);I'll send for the under taker commander %(Commander);Ashes to ashes, dust to dust, your toast Commander %(Commander)\""
          },
          {
            "StepName": "Global",
            "StepUC": "say_Docked $= \"{Docked at %(EventClass_StationName), %ifnotempty(EventClass_StationType,\\\"%(EventClass_StationType) type\\\")}{. }{This is a %(EventClass_Economy_Localised) station;Station economy is %(EventClass_Economy_Localised)}\""
          },
          {
            "StepName": "Global",
            "StepUC": "say_DockSRV $= \"Surface Recon Vehicle back on board Commander;Boarded mothership Commander, prepare for flight operations;Entering mothership\""
          },
          {
            "StepName": "Global",
            "StepUC": "say_DockingDenied $= \"Appears busy commander, confirming %(EventClass_StationName) has denied docking;Docking was denied at %(EventClass_StationName)\""
          },
          {
            "StepName": "Global",
            "StepUC": "say_DockingGranted $= \"Commander, confirmed for landing pad %(EventClass_LandingPad);Confirmed to pad %(EventClass_LandingPad); Landing pad %(EventClass_LandingPad) is ready for landing\""
          },
          {
            "StepName": "Global",
            "StepUC": "say_DockingRequested $= \"Sent docking request;Requested docking\""
          },
          {
            "StepName": "Global",
            "StepUC": "say_DockingTimeout $= \"Too late commander, permission has been withdrawn to dock;Took to long commander, permission to dock withdrawn\""
          },
          {
            "StepName": "Global",
            "StepUC": "say_DockingCancelled $= \"Docking cancelled;Cancelled docking request\""
          },
          {
            "StepName": "Global",
            "StepUC": "say_DockFighter $= \"Fighter docked with mothership Commander;Fighter back on board;Fighter docked succesfully, Commander;Fighter retrieved\"",
            "StepWhitespace": 1
          },
          {
            "StepName": "Global",
            "StepUC": "say_edsmscannoinfo $= \"No other information on system.;Ship computer has no other information on this system;Lookup of Wiki Pedia has failed! I can't find anything on this system; Google search on this system indicates no information available;System information unavailable\""
          },
          {
            "StepName": "Global",
            "StepUC": "say_edsmscanstarsplanets $= \"Total of %(totalstars) %ifne(totalstars,\\\"1\\\",\\\"stars\\\",\\\"star\\\") and %(totalplanets) %ifne(totalplanets,\\\"1\\\",\\\"planets\\\",\\\"planet\\\") in this system\"",
            "StepWhitespace": 1
          },
          {
            "StepName": "Global",
            "StepUC": "say_edsmscanstarinfo $= \"%(type) %rs(name,say_ss), Type %(startype), Mass %roundnz(mass,1,0.#,4) Sols, %ifnonzero(planets,\\\" %(planets) planets\\\"). \""
          },
          {
            "StepName": "Global",
            "StepUC": "say_edsmscanstarnoinfo $= \"No information on %(type) %rs(ownname,say_ss), %ifnonzero(planets,\\\" %(planets) planets\\\"). \""
          },
          {
            "StepName": "Global",
            "StepUC": "say_edsmscanstarbarycentre $= \"Barycentre %rs(ownname,say_ss), %ifnonzero(planets,\\\" %(planets) planets\\\"). \"",
            "StepWhitespace": 1
          },
          {
            "StepName": "Global",
            "StepUC": "say_edsmscanbodystarinfo $= \"%rs(pname,say_ss), %sc(stype), mass %roundnz(mass,1,0.#,4) Sols. \""
          },
          {
            "StepName": "Global",
            "StepUC": "say_edsmscanbodyinfo $= \"%rs(pname,say_ss), %(terraform)%(class)%ifnotcontains(landable,\\\"Not \\\",\\\", Landable\\\")\""
          },
          {
            "StepName": "Global",
            "StepUC": "say_edsmscanbodyinfoAtmos $= \"%ifnotempty(atmos,\\\", %(atmos)\\\")%ifnotcontains(atmos,\\\"atmosphere\\\",\\\" atmosphere \\\",\\\"\\\",\\\"\\\")\""
          },
          {
            "StepName": "Global",
            "StepUC": "say_edsmscanbodyinfoVolcanism $= \"%ifnotempty(volcanism, \\\", %(volcanism)\\\")\""
          },
          {
            "StepName": "Global",
            "StepUC": "say_edsmscanbodyinfoMat $= \", Materials detected \""
          },
          {
            "StepName": "Global",
            "StepUC": "say_edsmscanbodynoinfo $= \"No information on %(ownname). \"",
            "StepWhitespace": 1
          },
          {
            "StepName": "Global",
            "StepUC": "say_EjectCargo $= \"%iftrue(EventClass_Abandoned,\\\"Abandon\\\",\\\"Eject\\\") %(EventClass_Count) units of %(EventClass_FriendlyType) to space;Ejected %(EventClass_FriendlyType);Dumped %(EventClass_FriendlyType)\"",
            "StepWhitespace": 1
          },
          {
            "StepName": "Global",
            "StepUC": "say_FetchRemoteModule $= \"Module %sc(EventClass_StoredItemLocalised) being retrieved, cost %(EventClass_TransferCost) credits\""
          },
          {
            "StepName": "Global",
            "StepUC": "say_FactionKillBond $= \"Reward for combat from faction %rs(EventClass_AwardingFaction,say_ss) against %rs(EventClass_VictimFaction,say_ss), %(EventClass_Reward) credits\"",
            "StepWhitespace": 1
          },
          {
            "StepName": "Global",
            "StepUC": "say_EngineerProgressRank $= \"Congratulations, you've made rank %(EventClass_Rank), with Engineer %(EventClass_Engineer)\""
          },
          {
            "StepName": "Global",
            "StepUC": "say_EngineerProgressState $= \"Engineer %(EventClass_Engineer) has set your state to %(EventClass_Progress)\""
          },
          {
            "StepName": "Global",
            "StepUC": "say_EngineerProgress $= \"%ifnotempty(EventClass_Progress,say_EngineerProgressState,say_EngineerProgressRank)\"",
            "StepWhitespace": 1
          },
          {
            "StepName": "Global",
            "StepUC": "say_EngineerApply $= \"Applied blueprint %sc(EventClass_Blueprint) to ship, from Engineer %(EventClass_Engineer).  This is a level %(EventClass_Level) effect. %ifnotempty(EventClass_Override,\\\"%(EventClass_Override) was applied\\\") \""
          },
          {
            "StepName": "Global",
            "StepUC": "say_EngineerCraft $= \"Crafted blueprint %sc(EventClass_Blueprint), from Engineer %(EventClass_Engineer).  This is a level %(EventClass_Level) effect. Ready to apply \"",
            "StepWhitespace": 1
          },
          {
            "StepName": "Global",
            "StepUC": "say_EscapeInterdiction $= \"Evaded interdiction by %iftrue(EventClass_IsPlayer,say_EscapeInterdictionPlayer)%iffalse(EventClass_IsPlayer,say_EscapeInterdictionNPC)\""
          },
          {
            "StepName": "Global",
            "StepUC": "say_EscapeInterdictionPlayer $= \"Commander %(EventClass_Interdictor)\""
          },
          {
            "StepName": "Global",
            "StepUC": "say_EscapeInterdictionNPC $= \"N P C %(EventClass_Interdictor)\"",
            "StepWhitespace": 1
          },
          {
            "StepName": "Global",
            "StepUC": "say_FuelScoop $= \"{Refueled;Scooped}{ %round(EventClass_Scooped,2,0.##) tons of fuel, }{leaving level at;fuel level is now} %round(EventClass_Total,2,0.##) tons\"",
            "StepWhitespace": 1
          },
          {
            "StepName": "Global",
            "StepUC": "say_FSDJump $= \"Arrived at %rs(EventClass_StarSystem,say_ss), %(visit)%ifnonzero(EventEDDBPopulation,\\\"Populated, \\\") jump distance %round(EventClass_JumpDist,1,0.0) light years\""
          },
          {
            "StepName": "Global",
            "StepUC": "say_FSDJumpVisit $= \"First visit, ;Second visit, ;Third Visit, ;Fourth visit, ;Fifth visit, ;Sixth Visit,;\""
          },
          {
            "StepName": "Global",
            "StepUC": "say_FSDJumpFuel $= \", Fuel used %round(EventClass_FuelUsed,1,0.0) tons, Fuel left %round(EventClass_FuelLevel,1,0.0) tons\""
          },
          {
            "StepName": "Global",
            "StepUC": "say_FSDJumpFaction $= \", System controlled by %rs(EventClass_Faction,say_ss) %ifnotempty(EventClass_FactionState,\\\"in %(EventClass_FactionState)\\\")\""
          },
          {
            "StepName": "Global",
            "StepUC": "say_FSDJumpFuelWarning $= \"Alert commander, fuel level is low;Fuel level is low;Warning, running low on gas here\"",
            "StepWhitespace": 1
          },
          {
            "StepName": "Global",
            "StepUC": "say_HullDamageCritical $= \"Alert, Alert, Damage is critical at %(health) %\""
          },
          {
            "StepName": "Global",
            "StepUC": "say_HullDamage $= \"{Warning Commander, ;Commander, Alert, }Hull Damage is at %(health) %\""
          },
          {
            "StepName": "Global",
            "StepUC": "say_HeatWarning $= \"Warning Commander, gaining heat;Its hot in here, watch out;Heating up Commander\""
          },
          {
            "StepName": "Global",
            "StepUC": "say_HeatDamage $= \"Warning Commander, damage from heat sustained;Heat damage sustained;Ship damaged from over heating\"",
            "StepWhitespace": 1
          },
          {
            "StepName": "Global",
            "StepUC": "say_InterdictionSuccess $= \"%iftrue(EventClass_IsPlayer,say_InterdictionSuccessPlayer) %iffalse(EventClass_IsPlayer,say_InterdictionSuccessNPC)\""
          },
          {
            "StepName": "Global",
            "StepUC": "say_InterdictionSuccessPlayer $= \"Interdicted Human %(EventClass_CombatRank) Commander %(EventClass_Interdicted)\""
          },
          {
            "StepName": "Global",
            "StepUC": "say_InterdictionSuccessNPC $= \"Interdicted N P C %(EventClass_Interdicted) %ifnotempty(EventClass_Faction,say_InterdictedFaction)\""
          },
          {
            "StepName": "Global",
            "StepUC": "say_InterdictionFailure $= \"%iftrue(EventClass_IsPlayer,say_InterdictionFailurePlayer) %iffalse(EventClass_IsPlayer,say_InterdictionFailureNPC)\""
          },
          {
            "StepName": "Global",
            "StepUC": "say_InterdictionFailurePlayer $= \"Failed to interdict Human %(EventClass_CombatRank) Commander %(EventClass_Interdicted)\""
          },
          {
            "StepName": "Global",
            "StepUC": "say_InterdictionFailureNPC $= \"Failed to inderdict N P C %(EventClass_Interdicted) %ifnotempty(EventClass_Faction,say_InterdictedFaction)\"",
            "StepWhitespace": 1
          },
          {
            "StepName": "Global",
            "StepUC": "say_Interdicted $= \"%iftrue(EventClass_IsPlayer,say_InterdictedPlayer) %iffalse(EventClass_IsPlayer,say_InterdictedNPC)\""
          },
          {
            "StepName": "Global",
            "StepUC": "say_InterdictedPlayer $= \"Human Commander Alert!, %iftrue(EventClass_Submitted,say_InterdictedSubmitted) interdiction by %(EventClass_CombatRank) Commander %(EventClass_Interdictor)\""
          },
          {
            "StepName": "Global",
            "StepUC": "say_InterdictedNPC $= \"N P C Alert!, %iftrue(EventClass_Submitted,say_InterdictedSubmitted) interdiction by %(EventClass_Interdictor), %ifnotempty(EventClass_Faction,say_InterdictedFaction)\""
          },
          {
            "StepName": "Global",
            "StepUC": "say_InterdictedFaction $= \"of faction %rs(EventClass_Faction,say_ss)\""
          },
          {
            "StepName": "Global",
            "StepUC": "say_InterdictedSubmitted $= \"Submitted to\"",
            "StepWhitespace": 1
          },
          {
            "StepName": "Global",
            "StepUC": "say_JetConeBoost $= \"Frame Shift Drive super charged by %round(EventClass_BoostValue,2,0.##) times; Drive boosted by %round(EventClass_BoostValue,2,0.##) times\""
          },
          {
            "StepName": "Global",
            "StepUC": "say_JetConeDamage $= \"{Alert Commander, neutron star jet cone has damaged module %(EventClass_ModuleLocalised), }Take immediate evasive manoeuvre; Escape from cone immediately;Emergency escape now\"",
            "StepWhitespace": 1
          },
          {
            "StepName": "Global",
            "StepUC": "say_Liftoff $= \"Liftoff from planet;Ship is free of surface;Launch!;Takeoff sequence in progress Commander\""
          },
          {
            "StepName": "Global",
            "StepUC": "say_LaunchSRV $= \"Launch Surface Recon Vehicle with %(EventClass_Loadout) loadout.\""
          },
          {
            "StepName": "Global",
            "StepUC": "say_LaunchFighter $= \"{Fighter is launching commander;Deploying fighter}, %iftrue(EventClass_PlayerControlled,\\\" prepare to take controls\\\", \\\" crew member is taking command\\\") \"",
            "StepWhitespace": 1
          },
          {
            "StepName": "Global",
            "StepUC": "say_MaterialCollected $= \"Collected %(EventClass_Count) items of material %(EventClass_FriendlyName)\""
          },
          {
            "StepName": "Global",
            "StepUC": "say_MaterialDiscarded $= \"Discarded material %(EventClass_FriendlyName) %(EventClass_Count) items\""
          },
          {
            "StepName": "Global",
            "StepUC": "say_MaterialDiscovered $= \"Discovered new material %(EventClass_FriendlyName)\""
          },
          {
            "StepName": "Global",
            "StepUC": "say_MarketBuy $= \"Bought %(EventClass_Count) units of %(EventClass_FriendlyType), Buy price is %(EventClass_BuyPrice) credits, total cost is %(EventClass_TotalCost) credits\""
          },
          {
            "StepName": "Global",
            "StepUC": "say_MarketSell $= \"Sold %(EventClass_Count) units of %(EventClass_FriendlyType), Sell price is %(EventClass_SellPrice) credits, total sale is %(EventClass_TotalSale) credits, you made %(profit) credits\""
          },
          {
            "StepName": "Global",
            "StepUC": "say_MiningRefined $= \"Refined %(EventClass_FriendlyType);%(EventClass_FriendlyType) Refined\"",
            "StepWhitespace": 1
          },
          {
            "StepName": "Global",
            "StepUC": "say_MissionAbandoned $= \"%sc(EventClass_Name) has been abandoned;Abandoned mission %sc(EventClass_Name);Aborted mission %sc(EventClass_Name)\""
          },
          {
            "StepName": "Global",
            "StepUC": "say_MissionAccepted $= \"%sc(EventClass_Name) accepted %ifnotempty(EventClass_Faction,\\\"from faction %rs(EventClass_Faction,say_ss),\\\")\""
          },
          {
            "StepName": "Global",
            "StepUC": "say_MissionAccepted $+= \"%ifnotempty(EventClass_DestinationSystem,\\\" Mission destination is %rs(EventClass_DestinationSystem,say_ss),\\\")\""
          },
          {
            "StepName": "Global",
            "StepUC": "say_MissionAccepted $+= \"%ifnotempty(EventClass_DestinationStation,\\\" station %(EventClass_DestinationStation),\\\")\""
          },
          {
            "StepName": "Global",
            "StepUC": "say_MissionAccepted $+= \"%ifnotempty(EventClass_Target,\\\" target is %(EventClass_Target),\\\")\""
          },
          {
            "StepName": "Global",
            "StepUC": "say_MissionAccepted $+= \"%ifnotempty(EventClass_TargetFaction,\\\"of %rs(EventClass_TargetFaction,say_ss) faction,\\\")\""
          },
          {
            "StepName": "Global",
            "StepUC": "say_MissionAccepted $+= \"%ifnotempty(EventClass_PassengerType,\\\"taking %(EventClass_PassengerCount) passengers of type %(EventClass_PassengerType).\\\")\""
          },
          {
            "StepName": "Global",
            "StepUC": "say_MissionAccepted $+= \"%ifnotempty(EventClass_Expiry,\\\" This mission expires on %date(EventClass_Expiry,longdatetime),\\\")\"",
            "StepWhitespace": 1
          },
          {
            "StepName": "Global",
            "StepUC": "say_MissionCompleted $= \"{Congratulations, ;Well done Commander, }%sc(EventClass_Name) completed %ifnotempty(EventClass_Faction,\\\"from faction %rs(EventClass_Faction,say_ss),\\\")\""
          },
          {
            "StepName": "Global",
            "StepUC": "say_MissionCompleted $+= \"%ifnotempty(EventClass_Target,\\\" target was %(EventClass_Target),\\\")\""
          },
          {
            "StepName": "Global",
            "StepUC": "say_MissionCompleted $+= \"%ifnotempty(EventClass_TargetFaction,\\\"of %rs(EventClass_TargetFaction,say_ss) faction,\\\")\""
          },
          {
            "StepName": "Global",
            "StepUC": "say_MissionCompleted $+= \"%ifnotempty(EventClass_Reward,\\\"Reward is %(EventClass_Reward) credits,\\\")\""
          },
          {
            "StepName": "Global",
            "StepUC": "say_MissionFailed $= \"%sc(EventClass_Name) has failed;Failed mission %sc(EventClass_Name)\"",
            "StepWhitespace": 1
          },
          {
            "StepName": "Global",
            "StepUC": "say_ModuleBuy $= \"Module %sc(EventClass_BuyItemLocalised) fitted, cost %(EventClass_BuyPrice) credits, on ship %ship(EventClass_Ship) in %ifnotcontains(EventClass_Slot,\\\"slot\\\",\\\"slot \\\")%sc(EventClass_Slot).\""
          },
          {
            "StepName": "Global",
            "StepUC": "say_ModuleBuy $+= \"%ifnotempty(EventClass_SellItemLocalised,\\\" Sold Module %(EventClass_SellItemLocalised) for %(EventClass_SellPrice) credits.\\\")\""
          },
          {
            "StepName": "Global",
            "StepUC": "say_ModuleRetrieve $= \"Retrieved module %sc(EventClass_RetrievedItemLocalised) and fitted it to ship %ship(EventClass_Ship) into %ifnotcontains(EventClass_Slot,\\\"slot\\\",\\\"slot \\\")%sc(EventClass_Slot).\""
          },
          {
            "StepName": "Global",
            "StepUC": "say_ModuleSell $= \"Module %sc(EventClass_SellItemLocalised) removed, reimbursement price is %(EventClass_SellPrice) credits, on ship %ship(EventClass_Ship) in %ifnotcontains(EventClass_Slot,\\\"slot\\\",\\\"slot \\\")%sc(EventClass_Slot).\""
          },
          {
            "StepName": "Global",
            "StepUC": "say_ModuleSellRemote $= \"Sold remote module %sc(EventClass_SellItemLocalised), sell price is %(EventClass_SellPrice) credits.\""
          },
          {
            "StepName": "Global",
            "StepUC": "say_ModuleStore $= \"Module %sc(EventClass_StoredItemLocalised) removed from ship %ship(EventClass_Ship). %ifnotempty(EventClass_Cost,\\\"Store cost is %(EventClass_Cost) credits\\\")\""
          },
          {
            "StepName": "Global",
            "StepUC": "say_ModuleSwap $= \"Swap modules between %ifnotcontains(EventClass_FromSlot,\\\"slot\\\",\\\"slot \\\")%sc(EventClass_FromSlot) and %ifnotcontains(EventClass_ToSlot,\\\"slot\\\",\\\"slot \\\")%sc(EventClass_ToSlot)\""
          },
          {
            "StepName": "Global",
            "StepUC": "say_MassModuleStore $= \"Stored multiple modules from ship %ship(EventClass_Ship).\"",
            "StepWhitespace": 1
          },
          {
            "StepName": "Global",
            "StepUC": "say_PayFines $= \"Paid %(EventClass_Amount) credits in fines Commander%ifnonzero(EventClass_BrokerPercentage,\\\", with a commission to the broker of %(EventClass_BrokerPercentage) percent\\\")\""
          },
          {
            "StepName": "Global",
            "StepUC": "say_PayLegacyFines $= \"Paid %(EventClass_Amount) credits in legacy fines Commander%ifnonzero(EventClass_BrokerPercentage,\\\", with a commision to the broker of %(EventClass_BrokerPercentage) percent\\\")\""
          },
          {
            "StepName": "Global",
            "StepUC": "say_Promotion $= \"Congratulations, you've been promoted!\""
          },
          {
            "StepName": "Global",
            "StepUC": "say_Promotion $+= \"%ifnotempty(EventClass_Combat,\\\", Combat rank to %sc(EventClass_Combat)\\\")\""
          },
          {
            "StepName": "Global",
            "StepUC": "say_Promotion $+= \"%ifnotempty(EventClass_Trade,\\\", Trade rank to %sc(EventClass_Trade)\\\")\""
          },
          {
            "StepName": "Global",
            "StepUC": "say_Promotion $+= \"%ifnotempty(EventClass_Explore,\\\", Explorer rank to %sc(EventClass_Explore)\\\")\""
          },
          {
            "StepName": "Global",
            "StepUC": "say_Promotion $+= \"%ifnotempty(EventClass_Federation,\\\", Federation rank to %sc(EventClass_Federation)\\\")\""
          },
          {
            "StepName": "Global",
            "StepUC": "say_Promotion $+= \"%ifnotempty(EventClass_Empire,\\\", Empire rank to %sc(EventClass_Empire)\\\")\""
          },
          {
            "StepName": "Global",
            "StepUC": "say_PowerplayCollect $= \"Collected power play commodities for delivery for %(EventClass_Power), %sc(EventClass_Type), %(EventClass_Count) items\""
          },
          {
            "StepName": "Global",
            "StepUC": "say_PowerplayDefect $= \"Defecting from %(EventClass_FromPower) to %(EventClass_ToPower)\""
          },
          {
            "StepName": "Global",
            "StepUC": "say_PowerplayDeliver $= \"Delivering power play commodities for power %(EventClass_Power), %sc(EventClass_Type), %(EventClass_Count) items\""
          },
          {
            "StepName": "Global",
            "StepUC": "say_PowerplayFastTrack $= \"Fast track payment to power %(EventClass_Power), cost is %(EventClass_Cost) credits\""
          },
          {
            "StepName": "Global",
            "StepUC": "say_PowerplayJoin $= \"Joining %(EventClass_Power), good luck commander\""
          },
          {
            "StepName": "Global",
            "StepUC": "say_PowerplayLeave $= \"Leaving %(EventClass_Power)\""
          },
          {
            "StepName": "Global",
            "StepUC": "say_PowerplaySalary $= \"Power play salary received from %(EventClass_Power) of %(EventClass_Amount) credits\""
          },
          {
            "StepName": "Global",
            "StepUC": "say_PowerplayVote $= \"Voted for power %(EventClass_Power) to take over system %rs(EventClass_System,say_ss), votes are currently %(EventClass_Votes)\""
          },
          {
            "StepName": "Global",
            "StepUC": "say_PowerplayVoucher $= \"Reward for Power Play combat from %(EventClass_Power) in systems %expandarray(EventClass_Systems,\\\", \\\",0,20,splitcaps)\""
          },
          {
            "StepName": "Global",
            "StepUC": "say_PVPKill $= \"Congratulations, that scum %(EventClass_CombatRank) Commander %(EventClass_Victim) is pushing up the weeds now in heaven or hell;%(EventClass_CombatRank) Commander %(EventClass_Victim) despatched to another world\"",
            "StepWhitespace": 1
          },
          {
            "StepName": "Global",
            "StepUC": "say_RebootRepair $= \"Rebooting and repairing modules %expandarray(EventClass_Modules,\\\", \\\",0,20,splitcaps)\""
          },
          {
            "StepName": "Global",
            "StepUC": "say_RedeemVoucher $= \"Redeeming %(EventClass_Type) worth %(EventClass_Amount) %ifnotempty(EventClass_Faction,\\\" from faction %sc(EventClass_Faction)\\\")%ifnonzero(EventClass_BrokerPercentage,\\\", with a commission to the broker of %(EventClass_BrokerPercentage) percent\\\")\"",
            "StepWhitespace": 1
          },
          {
            "StepName": "Global",
            "StepUC": "say_Repair $= \"{Repaired %(EventClass_ItemLocalised) Commander;%(EventClass_ItemLocalised) repaired}. Cost is %(EventClass_Cost) credits\"",
            "StepWhitespace": 1
          },
          {
            "StepName": "Global",
            "StepUC": "say_RepairAll $= \"{Damage repaired;Ship fully repaired}{. Cost is %(EventClass_Cost) credits. }Ready for action Commander;Ready to launch\""
          },
          {
            "StepName": "Global",
            "StepUC": "say_RefuelAll $= \"{Ship fully refuelled;Refuelled ship}, cost is %(EventClass_Cost) credits, fuel %round(EventClass_Amount,1,0.0) tons\""
          },
          {
            "StepName": "Global",
            "StepUC": "say_RefuelPartial $= \"Ship partially refuelled, cost %(EventClass_Cost) credits, fuel %round(EventClass_Amount,1,0.0) tons\""
          },
          {
            "StepName": "Global",
            "StepUC": "say_RestockVehicle $= \"Bought %(EventClass_Count) %(EventClass_Type) of type %(EventClass_Loadout), Cost %(EventClass_Cost) credits\""
          },
          {
            "StepName": "Global",
            "StepUC": "say_Resurrect $= \"{As if by magic, your alive again Commander %(Commander);Alive again Commander to fight another day}, cost was %(EventClass_Cost) credits\""
          },
          {
            "StepName": "Global",
            "StepUC": "say_ReceiveText $= \"Text received from %(EventClass_FromLocalised), %(EventClass_Message)\"",
            "StepWhitespace": 1
          },
          {
            "StepName": "Global",
            "StepUC": "say_SellExplorationData $= \"Sold %(EventClass_Systems_Length) star systems for %(EventClass_BaseValue) credits.\""
          },
          {
            "StepName": "Global",
            "StepUC": "say_SellExplorationDataBonus $= \"And discovered %(EventClass_Discovered_Length) bodies for %(EventClass_Bonus) bonus credits\""
          },
          {
            "StepName": "Global",
            "StepUC": "say_SendText $= \"Text sent to %(EventClass_To_Localised)\"",
            "StepWhitespace": 1
          },
          {
            "StepName": "Global",
            "StepUC": "say_Scanned $= \"Warning, ship is being scanned for %(EventClass_ScanType) information;Detected a %(EventClass_ScanType) scan;Scanning detected, type %(EventClass_ScanType)\""
          },
          {
            "StepName": "Global",
            "StepUC": "say_ScanStar $= \"Scanned Star %rs(EventClass_BodyName,say_ss), %(EventClass_StarTypeText)\""
          },
          {
            "StepName": "Global",
            "StepUC": "say_ScanStarMassMag $= \", %roundnz(EventClass_nStellarMass,1,0.#,4) stellar masses\""
          },
          {
            "StepName": "Global",
            "StepUC": "say_ScanStarMassMag $+= \", Absolute Magnitude %round(EventClass_nAbsoluteMagnitude,1,M0.#)\""
          },
          {
            "StepName": "Global",
            "StepUC": "say_ScanStarInOrbit $= \", orbital period %round(period,1,0.#) days\""
          },
          {
            "StepName": "Global",
            "StepUC": "say_ScanStarHabitableZone $= \", Habitable Zone %round(EventClass_HabitableZoneInner,0,0) to %round(EventClass_HabitableZoneOuter,0,0) light seconds\""
          },
          {
            "StepName": "Global",
            "StepUC": "say_ScanStarAge $= \", Age %round(EventClass_nAge,1,0.#) million years\"",
            "StepWhitespace": 1
          },
          {
            "StepName": "Global",
            "StepUC": "say_ScanPlanet $= \"Scanned %rs(EventClass_BodyName,say_ss), %sc(EventClass_TerraformState) %rs(EventClass_PlanetClass,say_ss)\""
          },
          {
            "StepName": "Global",
            "StepUC": "say_ScanPlanetDistance $= \", Distance from arrival %round(EventClass_DistanceFromArrivalLS,1,#.0) light seconds\""
          },
          {
            "StepName": "Global",
            "StepUC": "say_ScanPlanetLandable $= \", Landable\""
          },
          {
            "StepName": "Global",
            "StepUC": "say_ScanPlanetAtmosphere $= \", %sc(EventClass_Atmosphere)\""
          },
          {
            "StepName": "Global",
            "StepUC": "say_ScanPlanetNoAtmosphere $= \", No Atmosphere\""
          },
          {
            "StepName": "Global",
            "StepUC": "say_ScanPlanetVolcanism $= \", %(EventClass_Volcanism)\""
          },
          {
            "StepName": "Global",
            "StepUC": "say_ScanPlanetTidallyLocked $= \", Tidally locked\""
          },
          {
            "StepName": "Global",
            "StepUC": "say_ScanPlanetRotation $= \", Rotation Period %round(rotation,1,0.#) days\""
          },
          {
            "StepName": "Global",
            "StepUC": "say_ScanPlanetOrbitalPeriod $= \", Orbital Period %round(period,1,0.#) days\""
          },
          {
            "StepName": "Global",
            "StepUC": "say_ScanPlanetMass $= \", Mass %round(EventClass_nMassEM,3,0.###) earth masses\""
          },
          {
            "StepName": "Global",
            "StepUC": "say_ScanPlanetMoonMass $= \", Mass %roundnz(moonmass,2,0.##,4) moon masses\""
          },
          {
            "StepName": "Global",
            "StepUC": "say_ScanPlanetGravity $= \", Gravity %roundnz(gravity,1,0.#,4) gee\""
          },
          {
            "StepName": "Global",
            "StepUC": "say_ScanPlanetTemperature $= \", Temperature %round(EventClass_nSurfaceTemperature,0,0.#) kelvin\""
          },
          {
            "StepName": "Global",
            "StepUC": "say_ScanPlanetPressure $= \", Pressure %roundnz(EventClass_nSurfacePressure,1,0.#,4) Pascal\""
          },
          {
            "StepName": "Global",
            "StepUC": "say_ScanPlanetNoSurfacePressure $= \", No surface pressure\""
          },
          {
            "StepName": "Global",
            "StepUC": "say_ScanPlanetMaterials $= \", Materials detected %ExpandVars(EventClass_Materials_,\\\", \\\",0,1000,\\\"nameonly splitcaps\\\")\"",
            "StepWhitespace": 1
          },
          {
            "StepName": "Global",
            "StepUC": "say_Screenshot $= \"Screen shot captured of %rs(EventClass_System,say_ss) system, body %(EventClass_Body)\"",
            "StepWhitespace": 1
          },
          {
            "StepName": "Global",
            "StepUC": "say_SellDrones $= \"Sold %(EventClass_Count) %(EventClass_Type) for %(EventClass_TotalSale) credits\""
          },
          {
            "StepName": "Global",
            "StepUC": "say_SelfDestruct $= \"Preparing for launch of escape capsule commander, vehicle self destructing\""
          },
          {
            "StepName": "Global",
            "StepUC": "say_ScientificResearch $= \"Contributed to scientific research %sc(EventClass_Name), %(EventClass_Count) items, %sc(EventClass_Category) category\"",
            "StepWhitespace": 1
          },
          {
            "StepName": "Global",
            "StepUC": "say_ShipyardBuy $= \"Bought ship %ship(EventClass_ShipType) at %(EventClass_ShipPrice) credits\""
          },
          {
            "StepName": "Global",
            "StepUC": "say_ShipyardBuy $+= \"%ifnotempty(EventClass_StoreOldShip,\\\", Stored ship %ship(EventClass_StoreOldShip) in hangar\\\")\""
          },
          {
            "StepName": "Global",
            "StepUC": "say_ShipyardBuy $+= \"%ifnotempty(EventClass_SellOldShip,\\\", Sold ship %ship(EventClass_SellOldShip) for %(EventClass_SellPrice) credits\\\")\""
          },
          {
            "StepName": "Global",
            "StepUC": "say_ShipyardSell $= \"Sold ship %ship(EventClass_ShipType) for %(EventClass_ShipPrice) credits%ifnotempty(EventClass_System, \\\" at system %rs(EventClass_System,say_ss)\\\")\""
          },
          {
            "StepName": "Global",
            "StepUC": "say_ShipyardNew $= \"{Congratulations on }{buying a brand new;your new purchase of a} %(EventClass_ShipType) ship\""
          },
          {
            "StepName": "Global",
            "StepUC": "say_ShipyardSwap $= \"Swapped ship %ship(EventClass_StoreOldShip) for a %ship(EventClass_ShipType)\""
          },
          {
            "StepName": "Global",
            "StepUC": "say_ShipyardTransfer $= \"Ordered the transfer of ship %ship(EventClass_ShipType) from system %rs(EventClass_System,say_ss) at %round(EventClass_Distance,1,0.0) light years, cost will be %(EventClass_TransferPrice) credits\"",
            "StepWhitespace": 1
          },
          {
            "StepName": "Global",
            "StepUC": "say_SupercruiseEntry $= \"Warp engines on;Supercruise engaged;Frame shift drive engaged;Hold on tight, Supercruising\""
          },
          {
            "StepName": "Global",
            "StepUC": "say_SupercruiseExit $= \"{Exiting supercruise;Normal space commander;Warp engines off, Impulse engaged}%ifnotempty(EventClass_BodyType,\\\", Arrived at %sc(EventClass_BodyType)\\\")%ifnotempty(EventClass_Body,\\\", %rs(EventClass_Body,say_ss)\\\")\"",
            "StepWhitespace": 1
          },
          {
            "StepName": "Global",
            "StepUC": "say_shieldsdown $= \"Alert shields are down, evasive manoeuvres;Shields are down;Danger no shields, run;Don't Panic, but we have no shields!\""
          },
          {
            "StepName": "Global",
            "StepUC": "say_shieldsup $= \"Shields restored;Shields back on line commander;Shields operational, Commander\"",
            "StepWhitespace": 1
          },
          {
            "StepName": "Global",
            "StepUC": "say_SetUserShipName $= \"I name this ship of type %(EventClass_Ship), and call it %(EventClass_ShipName) with registration %(EventClass_ShipIdent).  May god bless all who sail the stars in her!\"",
            "StepWhitespace": 1
          },
          {
            "StepName": "Global",
            "StepUC": "say_StartJump $= \"%ifcontains(EventClass_JumpType,\\\"Hyperspace\\\",\\\"%expand(say_StartHyperspace)\\\",\\\"%expand(say_StartSupercruise)\\\")\""
          },
          {
            "StepName": "Global",
            "StepUC": "say_StartHyperspace $= \"{Prepare for Hyperspace;Jumping}{ to system %(EventClass_StarSystem), Star class %(EventClass_StarClass)}{.;. Hold on tight!;. Warp drive engaging;. Make it So!}\""
          },
          {
            "StepName": "Global",
            "StepUC": "say_StartSupercruise $= \"Entering supercruise;Prepare for supercruise\"",
            "StepWhitespace": 1
          },
          {
            "StepName": "Global",
            "StepUC": "say_Synthesis $= \"Synthesis of %sc(EventClass_Name) performed\"",
            "StepWhitespace": 1
          },
          {
            "StepName": "Global",
            "StepUC": "say_Touchdown $= \"{Landing successful commander;Landed commander;Touchdown!}{ at Lattitude %round(EventClass_Latitude,2,M0.##), Longitude %round(EventClass_Longitude,2,M0.##), }Well done commander;Engines off;Prepare for surface operations\"",
            "StepWhitespace": 1
          },
          {
            "StepName": "Global",
            "StepUC": "say_Undocked $= \"Undocked from %sc(EventClass_StationName) fly safe commander;Ship ready, your in control Commander; Engines on, departing %sc(EventClass_StationName);Departing station %sc(EventClass_StationName)\""
          },
          {
            "StepName": "Global",
            "StepUC": "say_USSDrop $= \"Dropped into U S S type %(EventClass_USSTypeLocalised), threat level is %(EventClass_USSThreat)\"",
            "StepWhitespace": 1
          },
          {
            "StepName": "Global",
            "StepUC": "say_VehicleSwitch $= \"Switching to %sc(EventClass_To)\"",
            "StepWhitespace": 1
          },
          {
            "StepName": "Global",
            "StepUC": "say_WingAdd $= \"Commander %sc(EventClass_Name) has joined the wing\""
          },
          {
            "StepName": "Global",
            "StepUC": "say_WingJoin $= \"Joined wing with Commander %expandarray(EventClass_Others,\\\", Commander \\\", 0, 32)\""
          },
          {
            "StepName": "Global",
            "StepUC": "say_WingLeave $= \"Leaving wing Commander\"",
            "StepWhitespace": 1
          },
          {
            "StepName": "Rem",
            "StepUC": "subsitution patterns (ss1,ss2 etc) for faction and body name fields"
          },
          {
            "StepName": "Global",
            "StepUC": "say_ss1 $= \"-; dash \""
          },
          {
            "StepName": "Global",
            "StepUC": "say_ssn1 $= \" I ; 1 \""
          },
          {
            "StepName": "Global",
            "StepUC": "say_ssn2 $= \" II ; 2 \""
          },
          {
            "StepName": "Global",
            "StepUC": "say_ssn3 $= \" III ; 3 \""
          },
          {
            "StepName": "Global",
            "StepUC": "say_ssn4 $= \" IV ; 4 \""
          },
          {
            "StepName": "Global",
            "StepUC": "say_ssn5 $= \" V ; 5 \"",
            "StepWhitespace": 1
          },
          {
            "StepName": "Rem",
            "StepUC": "say subsitution patterns, applied after the phrase has been made, are called say_txN in the same form as above.",
            "StepWhitespace": 1
          },
          {
            "StepName": "Global",
            "StepUC": "say_tx1 $= \"terraforming; Terra Forming\""
          },
          {
            "StepName": "Global",
            "StepUC": "say_tx1 $= \"terraformable; Terra Formable\"",
            "StepWhitespace": 1
          },
          {
            "StepName": "Global",
            "StepUC": "SpeechDefinitionFile = SetUpLanguageEnglish"
          },
          {
            "StepName": "Global",
            "StepUC": "SpeechCulture = en-gb"
          },
          {
            "StepName": "Print",
            "StepUC": "English Language Selected!"
          }
        ]
      },
      {
        "Name": "onInstall",
        "Steps": [
          {
            "StepName": "If",
            "StepUC": "InstallList Contains VoicePack"
          },
          {
            "StepName": "Call",
            "StepUC": "SetUpLanguage"
          },
          {
            "StepName": "Say",
            "StepUC": "%(say_install)"
          },
          {
            "StepName": "Call",
            "StepUC": "Initialise"
          }
        ]
      },
      {
        "Name": "SaySystemInfo",
        "Steps": [
          {
            "StepName": "Rem",
            "StepUC": "Print File Version SaySysInfo %(ScanSystem) %(TriggerName)"
          },
          {
            "StepName": "Rem",
            "StepUC": "Verbosity. 0 is nothing. 1 is just no of stars/planets, 2 is stars+planets, 3 is s+p+m, 4 is s+p+m+sm",
            "StepWhitespace": 1
          },
          {
            "StepName": "If",
            "StepUC": "TriggerName $== onSayFinished",
            "StepComment": "Trigger!"
          },
          {
            "StepName": "Timer",
            "StepUC": "ScanDelay,\"%eval(\\\"%random(10)*10+20\\\")\""
          },
          {
            "StepName": "End",
            "StepUC": ""
          },
          {
            "StepName": "ElseIf",
            "StepUC": "%(SpeechVerbosity) >= 1"
          },
          {
            "StepName": "Scan",
            "StepUC": "EDSM  \"%(ScanSystem)\"",
            "StepWhitespace": 1
          },
          {
            "StepName": "Set",
            "StepUC": "speech = \"\"",
            "StepWhitespace": 1
          },
          {
            "StepName": "If",
            "StepUC": "S_Stars == 0"
          },
          {
            "StepName": "Set",
            "StepUC": "speech += \"%phrase(\\\"%expand(say_edsmscannoinfo)\\\")\""
          },
          {
            "StepName": "ElseIf",
            "StepUC": "SpeechVerbosity == 1"
          },
          {
            "StepName": "Print",
            "StepUC": "low verbosity"
          },
          {
            "StepName": "Let",
            "StepUC": "totalstars = 0"
          },
          {
            "StepName": "Let",
            "StepUC": "totalplanets = 0",
            "StepWhitespace": 1
          },
          {
            "StepName": "Loop",
            "StepUC": "%(S_Stars),N"
          },
          {
            "StepName": "Set",
            "StepUC": "prefix = S_Star_%(N)_"
          },
          {
            "StepName": "Set",
            "StepUC": "type = \"%indirect(\\\"%(prefix)type\\\")\""
          },
          {
            "StepName": "If",
            "StepUC": "type $!= barycentre"
          },
          {
            "StepName": "Let",
            "StepUC": "totalstars = %(totalstars)+1",
            "StepWhitespace": 1
          },
          {
            "StepName": "Set",
            "StepUC": "planets = \"%indirect(\\\"%(prefix)Planets\\\")\"",
            "StepLevelUp": 1
          },
          {
            "StepName": "Let",
            "StepUC": "totalplanets = %(totalplanets)+%(planets)",
            "StepWhitespace": 1
          },
          {
            "StepName": "Set",
            "StepUC": "speech += \"%phrase(\\\"%expand(say_edsmscanstarsplanets)\\\")\"",
            "StepLevelUp": 1
          },
          {
            "StepName": "Else",
            "StepUC": ""
          },
          {
            "StepName": "Set",
            "StepUC": "excludestars = \"%existsdefault(SpeechEDSMStarExclusion,\\\"\\\")\"",
            "StepWhitespace": 1
          },
          {
            "StepName": "Loop",
            "StepUC": "%(S_Stars),S"
          },
          {
            "StepName": "Set",
            "StepUC": "prefix = S_Star_%(S)_"
          },
          {
            "StepName": "Set",
            "StepUC": "planets = \"%indirect(\\\"%(prefix)Planets\\\")\""
          },
          {
            "StepName": "Set",
            "StepUC": "data = \"%indirect(\\\"%(prefix)data\\\")\""
          },
          {
            "StepName": "Set",
            "StepUC": "type = \"%indirect(\\\"%(prefix)type\\\")\""
          },
          {
            "StepName": "Set",
            "StepUC": "ownname = \"%indirect(\\\"%(prefix)assignedname\\\")\"",
            "StepWhitespace": 1
          },
          {
            "StepName": "Let",
            "StepUC": "exclude = 0",
            "StepWhitespace": 1
          },
          {
            "StepName": "If",
            "StepUC": "type $== barycentre"
          },
          {
            "StepName": "Set",
            "StepUC": "speech += %expand(say_edsmscanstarbarycentre)"
          },
          {
            "StepName": "ElseIf",
            "StepUC": "data IsTrue"
          },
          {
            "StepName": "Set",
            "StepUC": "name = \"%indirect(\\\"%(prefix)bodyname\\\")\""
          },
          {
            "StepName": "Set",
            "StepUC": "starclass = \"%indirect(\\\"%(prefix)startype\\\")\""
          },
          {
            "StepName": "Set",
            "StepUC": "startype = \"%indirect(\\\"%(prefix)startypetext\\\")\""
          },
          {
            "StepName": "Set",
            "StepUC": "mass = \"%indirect(\\\"%(prefix)stellarmass\\\")\"",
            "StepWhitespace": 1
          },
          {
            "StepName": "Rem",
            "StepUC": "we are going to look for A, ,A or just A",
            "StepWhitespace": 1
          },
          {
            "StepName": "If",
            "StepUC": "excludestars Contains %(starclass), Or excludestars Contains ,%(starclass) Or excludestars $== %(starclass)"
          },
          {
            "StepName": "Let",
            "StepUC": "exclude = 1"
          },
          {
            "StepName": "Else",
            "StepUC": ""
          },
          {
            "StepName": "Set",
            "StepUC": "speech += %expand(say_edsmscanstarinfo)"
          },
          {
            "StepName": "Else",
            "StepUC": "",
            "StepLevelUp": 1
          },
          {
            "StepName": "Set",
            "StepUC": "speech += %expand(say_edsmscanstarnoinfo)",
            "StepWhitespace": 1
          },
          {
            "StepName": "If",
            "StepUC": "exclude IsFalse",
            "StepLevelUp": 1
          },
          {
            "StepName": "Loop",
            "StepUC": "%(planets),P"
          },
          {
            "StepName": "Set",
            "StepUC": "prefix = S_Planet_%(S)_%(P)_"
          },
          {
            "StepName": "Call",
            "StepUC": "saySystemInfoBody(prefix=\"%(prefix)\",S_*$=1)"
          },
          {
            "StepName": "Set",
            "StepUC": "speech += %(ReturnValue)",
            "StepWhitespace": 1
          },
          {
            "StepName": "If",
            "StepUC": "%(SpeechVerbosity) >= 3"
          },
          {
            "StepName": "Set",
            "StepUC": "moons = \"%indirect(\\\"%(prefix)Moons\\\")\"",
            "StepWhitespace": 1
          },
          {
            "StepName": "Loop",
            "StepUC": "%(moons),M"
          },
          {
            "StepName": "Set",
            "StepUC": "prefix = S_Moon_%(S)_%(P)_%(M)_"
          },
          {
            "StepName": "Call",
            "StepUC": "saySystemInfoBody(prefix=\"%(prefix)\",S_*$=1)"
          },
          {
            "StepName": "Set",
            "StepUC": "speech += %(ReturnValue)",
            "StepWhitespace": 1
          },
          {
            "StepName": "If",
            "StepUC": "%(SpeechVerbosity) >= 4"
          },
          {
            "StepName": "Set",
            "StepUC": "submoons = \"%indirect(\\\"%(prefix)Submoons\\\")\"",
            "StepWhitespace": 1
          },
          {
            "StepName": "Loop",
            "StepUC": "%(submoons),SM"
          },
          {
            "StepName": "Set",
            "StepUC": "prefix = S_SubMoon_%(S)_%(P)_%(M)_%(SM)_"
          },
          {
            "StepName": "Call",
            "StepUC": "saySystemInfoBody(prefix=\"%(prefix)\",S_*$=1)"
          },
          {
            "StepName": "Set",
            "StepUC": "speech += %(ReturnValue)",
            "StepWhitespace": 1
          },
          {
            "StepName": "If",
            "StepUC": "speech IsNotEmpty",
            "StepLevelUp": 8,
            "StepComment": "Because we may have decided not to say anything!"
          },
          {
            "StepName": "Set",
            "StepUC": "speech = \"%replacevar(speech,\\\"say_tx\\\")\""
          },
          {
            "StepName": "Say",
            "StepUC": "%(speech),Priority=Low,Literal=1"
          }
        ]
      },
      {
        "Name": "Initialise",
        "Steps": [
          {
            "StepName": "MenuItem",
            "StepUC": "VoiceMenuConfigureVoice,add-ons,\"Configure Voice\",speaker"
          },
          {
            "StepName": "MenuItem",
            "StepUC": "VoiceMenuConfigureVerbosity,add-ons,\"Configure Voice Parameters\",speaker"
          },
          {
            "StepName": "MenuItem",
            "StepUC": "VoiceMenuConfigureSpeechFile,add-ons,\"Edit speech file\",missioncompleted"
          },
          {
            "StepName": "MenuItem",
            "StepUC": "VoiceMenuShowHelp,help,\"Voice Pack\",speaker"
          },
          {
            "StepName": "If",
            "StepUC": "SpeechVerbosity NotPresent"
          },
          {
            "StepName": "PersistentGlobal",
            "StepUC": "SpeechVerbosity = 1"
          }
        ]
      },
      {
        "Name": "Menus",
        "Steps": [
          {
            "StepName": "If",
            "StepUC": "MenuName Contains ConfigureVoice"
          },
          {
            "StepName": "Perform",
            "StepUC": "ConfigureVoice \"Configure Voice Pack Synthesis Defaults\"",
            "StepWhitespace": 1
          },
          {
            "StepName": "If",
            "StepUC": "MenuName Contains ConfigureSpeechFile",
            "StepLevelUp": 1
          },
          {
            "StepName": "Perform",
            "StepUC": "EditSpeechText",
            "StepWhitespace": 1
          },
          {
            "StepName": "If",
            "StepUC": "MenuName Contains ShowHelp",
            "StepLevelUp": 1
          },
          {
            "StepName": "MessageBox",
            "StepUC": "\"Voice Pack V3 (C) ED Discovery team\\r\\n\\r\\nUse Add-Ons | Manage to enable or disable this\\r\\nUse the speech and wave menu items in the Add-Ons menu to configure defaults\",\"Voice Pack\"",
            "StepWhitespace": 1
          },
          {
            "StepName": "If",
            "StepUC": "MenuName Contains ConfigureVerbosity",
            "StepLevelUp": 1,
            "StepWhitespace": 1
          },
          {
            "StepName": "Let",
            "StepUC": "disablevoice = 0"
          },
          {
            "StepName": "Let",
            "StepUC": "logtimedate = 0"
          },
          {
            "StepName": "Let",
            "StepUC": "loglastonly = 0"
          },
          {
            "StepName": "Let",
            "StepUC": "firstjump = 0",
            "StepWhitespace": 1
          },
          {
            "StepName": "If",
            "StepUC": "SpeechOptions IsPresent"
          },
          {
            "StepName": "If",
            "StepUC": "SpeechOptions Contains PrintOnly;"
          },
          {
            "StepName": "Let",
            "StepUC": "disablevoice = 1",
            "StepWhitespace": 1
          },
          {
            "StepName": "If",
            "StepUC": "SpeechOptions Contains LogTimeDate;",
            "StepLevelUp": 1
          },
          {
            "StepName": "Let",
            "StepUC": "logtimedate = 1",
            "StepWhitespace": 1
          },
          {
            "StepName": "If",
            "StepUC": "SpeechOptions Contains LogLastOnly;",
            "StepLevelUp": 1
          },
          {
            "StepName": "Let",
            "StepUC": "loglastonly = 1",
            "StepWhitespace": 1
          },
          {
            "StepName": "If",
            "StepUC": "SpeechOptions Contains FirstJumpOnly;",
            "StepLevelUp": 1
          },
          {
            "StepName": "Let",
            "StepUC": "firstjump = 1",
            "StepWhitespace": 1
          },
          {
            "StepName": "Set",
            "StepUC": "dvar1a = \"L1,Label,\\\"Verbosity\\\",10,50,80,20,\\\"\\\"\"",
            "StepLevelUp": 2
          },
          {
            "StepName": "Set",
            "StepUC": "dvar1b = \"TBV,TextBox,%Existsdefault(SpeechVerbosity,\\\"1\\\"),100,50,50,20,\\\"0 = mininal output, 1 = normal output, 2 = more verbose, 3 = very verbose, 4 = ludicrous speed verbose\\\"\""
          },
          {
            "StepName": "Set",
            "StepUC": "dvar1c = \"CBD,CheckBox,\\\"Disable Voice Output\\\",100,80,200,20,\\\"Disable Voice Output, use to print only\\\",%(disablevoice)\"",
            "StepWhitespace": 1
          },
          {
            "StepName": "Set",
            "StepUC": "Def = \"\""
          },
          {
            "StepName": "Set",
            "StepUC": "dvar2a = \"L2,Label,\\\"Speech file\\\",10,120,80,20,\\\"\\\"\""
          },
          {
            "StepName": "Set",
            "StepUC": "dvar2b = \"TBLF,TextBox,\\\"%existsdefault(SpeechLog,Def)\\\",100,120,220,20,\\\"Empty means no speech file, else enter the file or use browse\\\"\""
          },
          {
            "StepName": "Set",
            "StepUC": "dvar2c = \"BBROWSE,Button,Browse,350,118,80,20,\\\"Select file to write speech output to\\\"\""
          },
          {
            "StepName": "Set",
            "StepUC": "dvar2d = \"CBP,CheckBox,\\\"Print date/time in log\\\",100,150,140,20,\\\"Print time and date before text\\\",%(logtimedate)\""
          },
          {
            "StepName": "Set",
            "StepUC": "dvar2e = \"CBL,CheckBox,\\\"Log Last only\\\",250,150,140,20,\\\"Clear log before each speech output\\\",%(loglastonly)\"",
            "StepWhitespace": 1
          },
          {
            "StepName": "Set",
            "StepUC": "dvar3a = \"L3,Label,\\\"Exclude Stars\\\",10,190,80,20,\\\"\\\"\""
          },
          {
            "StepName": "Set",
            "StepUC": "dvar3b = \"TBSTAR,TextBox,\\\"%existsdefault(SpeechEDSMStarExclusion,Def)\\\",100,190,220,20,\\\"Exclude these stars from the read out of system information read after jumping, star types OBAFGKM, H,N,TTS, Wx etc, comma or space separated\\\"\""
          },
          {
            "StepName": "Set",
            "StepUC": "dvar3c = \"CBF,CheckBox,\\\"First jump only\\\",100,220,140,20,\\\"Say system information on first jump to system only\\\",%(firstjump)\"",
            "StepWhitespace": 1
          },
          {
            "StepName": "Set",
            "StepUC": "dvarok = \"OK,Button,\\\"OK\\\",350,240,80,20,\\\"Press for OK\\\"\""
          },
          {
            "StepName": "Set",
            "StepUC": "dvarcancel = \"Cancel,Button,\\\"Cancel\\\",250,240,80,20,\\\"Press for Cancel\\\"\"",
            "StepWhitespace": 1
          },
          {
            "StepName": "Dialog",
            "StepUC": "D1, \"Speech Configuration\", \"460,290\", dvar",
            "StepWhitespace": 1
          },
          {
            "StepName": "While",
            "StepUC": "D1 $!= Cancel And D1 $!= Escape"
          },
          {
            "StepName": "If",
            "StepUC": "D1 $== BBROWSE"
          },
          {
            "StepName": "FileDialog",
            "StepUC": "savefile,c:,\"Log files|*.log|All Files|*.*\",*.log,on"
          },
          {
            "StepName": "If",
            "StepUC": "FileName IsNotEmpty"
          },
          {
            "StepName": "DialogControl",
            "StepUC": "D1,Set TBLF=%(FileName)",
            "StepWhitespace": 1
          },
          {
            "StepName": "If",
            "StepUC": "D1 $== OK",
            "StepLevelUp": 2
          },
          {
            "StepName": "Let",
            "StepUC": "good = 1",
            "StepWhitespace": 1
          },
          {
            "StepName": "DialogControl",
            "StepUC": "D1,Get TBV"
          },
          {
            "StepName": "If",
            "StepUC": "%eval(DialogResult,Try) $!= NAN"
          },
          {
            "StepName": "PersistentGlobal",
            "StepUC": "SpeechVerbosity = %(DialogResult)"
          },
          {
            "StepName": "Else",
            "StepUC": ""
          },
          {
            "StepName": "MessageBox",
            "StepUC": "\"Verbosity must be a number\",\"Incorrect verbosity entered\""
          },
          {
            "StepName": "Let",
            "StepUC": "good = 0",
            "StepWhitespace": 1
          },
          {
            "StepName": "PersistentGlobal",
            "StepUC": "SpeechOptions = \"\"",
            "StepLevelUp": 1,
            "StepWhitespace": 1
          },
          {
            "StepName": "DialogControl",
            "StepUC": "D1,Get CBD"
          },
          {
            "StepName": "If",
            "StepUC": "DialogResult IsTrue"
          },
          {
            "StepName": "PersistentGlobal",
            "StepUC": "SpeechOptions += PrintOnly;"
          },
          {
            "StepName": "DialogControl",
            "StepUC": "D1,Get CBP",
            "StepLevelUp": 1
          },
          {
            "StepName": "If",
            "StepUC": "DialogResult IsTrue"
          },
          {
            "StepName": "PersistentGlobal",
            "StepUC": "SpeechOptions += LogTimeDate;"
          },
          {
            "StepName": "DialogControl",
            "StepUC": "D1,Get CBL",
            "StepLevelUp": 1
          },
          {
            "StepName": "If",
            "StepUC": "DialogResult IsTrue"
          },
          {
            "StepName": "PersistentGlobal",
            "StepUC": "SpeechOptions += LogLastOnly;"
          },
          {
            "StepName": "DialogControl",
            "StepUC": "D1,Get CBF",
            "StepLevelUp": 1
          },
          {
            "StepName": "If",
            "StepUC": "DialogResult IsTrue"
          },
          {
            "StepName": "PersistentGlobal",
            "StepUC": "SpeechOptions += FirstJumpOnly;",
            "StepWhitespace": 1
          },
          {
            "StepName": "DialogControl",
            "StepUC": "D1,Get TBSTAR",
            "StepLevelUp": 1
          },
          {
            "StepName": "PersistentGlobal",
            "StepUC": "SpeechEDSMStarExclusion = %(DialogResult)",
            "StepWhitespace": 1
          },
          {
            "StepName": "DialogControl",
            "StepUC": "D1,Get TBLF"
          },
          {
            "StepName": "If",
            "StepUC": "DialogResult IsNotEmpty And good IsTrue"
          },
          {
            "StepName": "If",
            "StepUC": "%fileexists(DialogResult) IsTrue"
          },
          {
            "StepName": "PersistentGlobal",
            "StepUC": "SpeechLog = %(DialogResult)"
          },
          {
            "StepName": "Else",
            "StepUC": ""
          },
          {
            "StepName": "Let",
            "StepUC": "success = \"%openfile(h1,DialogResult,create)\""
          },
          {
            "StepName": "If",
            "StepUC": "success IsTrue"
          },
          {
            "StepName": "Print",
            "StepUC": "test write to %(DialogResult)"
          },
          {
            "StepName": "Expr",
            "StepUC": "%writeline(h1,\"Speech output file\")"
          },
          {
            "StepName": "Expr",
            "StepUC": "%closefile(h1)"
          },
          {
            "StepName": "PersistentGlobal",
            "StepUC": "SpeechLog = %(DialogResult)"
          },
          {
            "StepName": "Else",
            "StepUC": ""
          },
          {
            "StepName": "MessageBox",
            "StepUC": "\"Speech Log path not valid\",\"Incorrect filename given\""
          },
          {
            "StepName": "Let",
            "StepUC": "good = 0"
          },
          {
            "StepName": "Else",
            "StepUC": "",
            "StepLevelUp": 2
          },
          {
            "StepName": "PersistentGlobal",
            "StepUC": "SpeechLog = \"\"",
            "StepWhitespace": 1
          },
          {
            "StepName": "If",
            "StepUC": "good IsTrue",
            "StepLevelUp": 1
          },
          {
            "StepName": "Break",
            "StepUC": "",
            "StepWhitespace": 1
          },
          {
            "StepName": "DialogControl",
            "StepUC": "D1,Continue",
            "StepLevelUp": 2,
            "StepWhitespace": 1
          },
          {
            "StepName": "DialogControl",
            "StepUC": "D1, Close",
            "StepLevelUp": 1
          }
        ]
      },
      {
        "Name": "GenericDelayedResponse",
        "Steps": [
          {
            "StepName": "Timer",
            "StepUC": "VoicePackGenericDelay%(EventJS_event),%(Delay),%(EventJID)"
          }
        ]
      },
      {
        "Name": "saySystemInfoBody",
        "Steps": [
          {
            "StepName": "Rem",
            "StepUC": "prefix in, plus all S_ variables",
            "StepWhitespace": 1
          },
          {
            "StepName": "Set",
            "StepUC": "pdata = \"%indirect(\\\"%(prefix)data\\\")\"",
            "StepWhitespace": 1
          },
          {
            "StepName": "If",
            "StepUC": "pdata IsTrue"
          },
          {
            "StepName": "Set",
            "StepUC": "pname = \"%indirect(\\\"%(prefix)bodyname\\\")\""
          },
          {
            "StepName": "Set",
            "StepUC": "isstar = \"%indirect(\\\"%(prefix)isstar\\\")\"",
            "StepWhitespace": 1
          },
          {
            "StepName": "Rem",
            "StepUC": "print %(prefix) %(pname) star %(isstar)",
            "StepWhitespace": 1
          },
          {
            "StepName": "If",
            "StepUC": "isstar IsTrue"
          },
          {
            "StepName": "Set",
            "StepUC": "stype = \"%indirect(\\\"%(prefix)startypetext\\\")\""
          },
          {
            "StepName": "Set",
            "StepUC": "mass = \"%indirect(\\\"%(prefix)stellarmass\\\")\""
          },
          {
            "StepName": "Return",
            "StepUC": "%expand(say_edsmscanbodystarinfo)",
            "StepWhitespace": 1
          },
          {
            "StepName": "Else",
            "StepUC": ""
          },
          {
            "StepName": "Set",
            "StepUC": "terraform = \"%indirect(\\\"%(prefix)terraformstate\\\")\""
          },
          {
            "StepName": "Set",
            "StepUC": "class = \"%indirect(\\\"%(prefix)class\\\")\""
          },
          {
            "StepName": "Set",
            "StepUC": "landable = \"%indirect(\\\"%(prefix)landable\\\")\"",
            "StepWhitespace": 1
          },
          {
            "StepName": "Set",
            "StepUC": "speech = %expand(say_edsmscanbodyinfo)",
            "StepWhitespace": 1
          },
          {
            "StepName": "If",
            "StepUC": "%(SpeechVerbosity) >= 2"
          },
          {
            "StepName": "Set",
            "StepUC": "atmos = \"%indirect(\\\"%(prefix)atmosphere\\\")\""
          },
          {
            "StepName": "Set",
            "StepUC": "speech += %expand(say_edsmscanbodyinfoAtmos)",
            "StepWhitespace": 1
          },
          {
            "StepName": "If",
            "StepUC": "%(SpeechVerbosity) >= 3"
          },
          {
            "StepName": "Set",
            "StepUC": "volcanism = \"%indirect(\\\"%(prefix)volcanism\\\")\""
          },
          {
            "StepName": "Set",
            "StepUC": "speech += %expand(say_edsmscanbodyinfoVolcanism)",
            "StepWhitespace": 1
          },
          {
            "StepName": "Set",
            "StepUC": "matcount = \"%indirect(\\\"%(prefix)MaterialsCount\\\")\"",
            "StepWhitespace": 1
          },
          {
            "StepName": "If",
            "StepUC": "matcount > 0"
          },
          {
            "StepName": "Set",
            "StepUC": "speech += %expand(say_edsmscanbodyinfoMat)"
          },
          {
            "StepName": "Set",
            "StepUC": "speech += \"%ExpandVars(\\\"%(prefix)Materials_\\\",\\\", \\\",1,1000,\\\"nameonly splitcaps\\\")\"",
            "StepWhitespace": 1
          },
          {
            "StepName": "Set",
            "StepUC": "speech += \". \"",
            "StepLevelUp": 3
          },
          {
            "StepName": "Return",
            "StepUC": "%(speech)"
          },
          {
            "StepName": "Else",
            "StepUC": "",
            "StepLevelUp": 1
          },
          {
            "StepName": "Set",
            "StepUC": "ownname = \"%indirect(\\\"%(prefix)assignedname\\\")\""
          },
          {
            "StepName": "Return",
            "StepUC": "%expand(say_edsmscanbodynoinfo)",
            "StepWhitespace": 1
          }
        ]
      },
      {
        "Name": "speak",
        "Steps": [
          {
            "StepName": "Rem",
            "StepUC": "speech always, optional: Volume, Priority, FinishEvent, Wait",
            "StepWhitespace": 1
          },
          {
            "StepName": "Set",
            "StepUC": "speech = \"%replacevar(speech,\\\"say_tx\\\")\"",
            "StepWhitespace": 1
          },
          {
            "StepName": "Set",
            "StepUC": "ds = 0"
          },
          {
            "StepName": "If",
            "StepUC": "SpeechOptions IsPresent And SpeechOptions Contains PrintOnly;"
          },
          {
            "StepName": "Set",
            "StepUC": "ds = 1",
            "StepWhitespace": 1
          },
          {
            "StepName": "Say",
            "StepUC": "%(speech), Literal=1, Volume=\"%existsdefault(Volume,\\\"-999\\\")\", Priority=\"%existsdefault(Priority,\\\"Normal\\\")\", DontSpeak=\"%(ds)\", FinishEvent=\"%existsdefault(FinishEvent,\\\"\\\")\" , Wait=\"%existsdefault(Wait,\\\"0\\\")\"",
            "StepLevelUp": 1,
            "StepWhitespace": 1
          },
          {
            "StepName": "If",
            "StepUC": "SpeechLog IsPresent And SpeechLog IsNotEmpty"
          },
          {
            "StepName": "If",
            "StepUC": "SpeechOptions IsPresent And SpeechOptions Contains LogLastOnly;"
          },
          {
            "StepName": "Let",
            "StepUC": "success = \"%openfile(h1,SpeechLog,create)\""
          },
          {
            "StepName": "Else",
            "StepUC": ""
          },
          {
            "StepName": "Let",
            "StepUC": "success = \"%openfile(h1,SpeechLog,append)\"",
            "StepWhitespace": 1
          },
          {
            "StepName": "If",
            "StepUC": "success IsTrue",
            "StepLevelUp": 1
          },
          {
            "StepName": "If",
            "StepUC": "SpeechOptions IsPresent And SpeechOptions Contains LogTimeDate;"
          },
          {
            "StepName": "Expr",
            "StepUC": "%write(h1,\"%datetimenow(local):\")",
            "StepWhitespace": 1
          },
          {
            "StepName": "Expr",
            "StepUC": "%writeline(h1,speech)",
            "StepLevelUp": 1
          },
          {
            "StepName": "Expr",
            "StepUC": "%closefile(h1)"
          },
          {
            "StepName": "Else",
            "StepUC": ""
          },
          {
            "StepName": "Print",
            "StepUC": "Cannot write to speech log file '%(SpeechLog)'",
            "StepWhitespace": 1
          }
        ]
      }
    ]
  },
  "Enabled": true,
  "Install": [
    {
      "var": "LongDescription",
      "value": "This is the third edition of the voice pack for EDD, for version 6.2+\\r\\n***This will disable all previous voice packs***\\r\\n\\r\\nIt vocalises most events which are received, and welcomes you at the start and exit of the program. \\nCertain events are not vocalised if they don't contain any information relevant to the user or if they only appear on start up.\\r\\n\\r\\nSpeech control and voice selection can be accomplished through the menu option in Add-Ons.\\r\\n\\r\\nThe ED Discovery team hope you enjoy this feature.\\r\\n\\r\\nMore voices can be purchased online.  Ivona voices which are commonly used since they are compatible with SAPI 5 interface can be purchased from www.textaloud.com individually.  Voices must be SAPI 5 compatible to be used with EDDiscovery."
    },
    {
      "var": "ShortDescription",
      "value": "Voice file for ED"
    },
    {
      "var": "Version",
      "value": "3.0.0.0"
    },
    {
      "var": "MinEDVersion",
      "value": "6.2.0.0"
    },
    {
      "var": "Location",
      "value": "Actions"
    },
    {
      "var": "DisableOther",
      "value": "VoicePackV2"
    }
  ]
}